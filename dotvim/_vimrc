"-----------------------------------------------------------------------------
"Settings to run first
"-----------------------------------------------------------------------------
"Run settings that throw a fit if they aren't run first.  That means calling
"all the plugins I installed via pathogen, turning on filetype stuff + syntax,
"setting my mapleader, and using my (heavily modified) jellybeans colorscheme
call pathogen#infect()
filetype plugin indent on
syntax enable
let mapleader = ";"
colorscheme jellybeans

"-----------------------------------------------------------------------------
"Works in progress
"-----------------------------------------------------------------------------
function! GenerateTmpFilename()
    let ftypedict = {"python": "py", "vim": "vim", "perl": "pl", "sh": "sh", "zsh": "zsh"}
    return strftime("%m-%d-%y__%H:%M:%S").".".get(ftypedict, &filetype, "tmp")
endfunction

map <Leader><C-w> :r ~/.dotfiles_config<Cr>0df=v$d:w <C-r>"/tmp/<C-r>=GenerateTmpFilename()<Cr><Cr>

imap <C-x><C-h> <C-o>:call StackoverflowQuery()<Cr>
nnoremap <Leader><C-h> :call StackoverflowQuery()<Cr>
"-----------------------------------------------------------------------------
"Mappings
"-----------------------------------------------------------------------------
"emacs-style hotkeys for command line
cno <C-a> <Home>
cno <C-e> <End>
cno <C-b> <Left>
cno <C-f> <Right>
cno <C-n> <Down>
cno <C-p> <Up>

"some weirder alt-based hotkeys for commandline as well
cno f <C-Right>
cno b <C-Left>
cno a <Home>
cno e <End>
cno  <End><C-u>

"I try to use ctrl-c so that I can use escape based hotkeys in insert mode
ino f <C-Right>
ino b <C-Left>
ino a <Home>
ino e <End>
ino  

"c-j/k for up/down, c-h/l for start/end of line
map <C-j> 15j
map <C-k> 15k
map <C-h> ^
map <C-l> $

"make tab work how I would except
nmap <tab> v>><esc>
nmap <S-tab> v<<<esc>
vmap <tab> >gv
vmap <S-tab> <gv

"z[h]igh z[l]ow z[m]id
nmap zh z<Cr>
map zm z.
nmap zl zb

"Q to play macro q
nn Q @q
vn Q @q

"ways to write files quickly(or as sudo). ZZ has to be rebound because
"minibufexplr can be really really dumb sometimes
map <Leader>w :w<Cr>
map <Leader>W :w !sudo tee %
nmap ZZ :wqa<Cr>

"Buffer tricks,c-n/p for navigating, ;` for last buffer, ;b for buffer prompt
map <Leader>b :b 
map <Leader>` :b#<Cr>
map <C-n> :bn<Cr>
nmap <C-p> :bp<Cr>

"Comment keys, ;j to comment out line, ;J to uncomment, ;c-d to make a
"commented copy of a line(so I'm not afraid to break it)
map <Leader>j ;cc
map <Leader>J ;cu
map <Leader><C-d> Ypk<Leader>cc

"c-f for file completion, c-/ to continue completing file, ;e to open a file
imap <C-f> <C-x><C-f>
imap <C-_> /<BS><C-x><C-f>
map <Leader>e :e 

"vv to open vimrc, vc-v to open vimrc in vertical split, rr to reload vimrc
map <Leader>vv :e ~/.vimrc<Cr>
map <Leader>v<C-v> :vs ~/.vimrc<Cr>
map <Leader>rr :sourc ~/.vimrc<Cr>

"c-\ to toggle highlight search
map <C-\> :set hlsearch! hlsearch?<Cr>

"-----------------------------------------------------------------------------
"Settings
"-----------------------------------------------------------------------------
"Tabs are 8 spaces, but act like they are 4.  Autoindent stuff uses 4 spaces.
"Tabs are expanded to the correct number of spaces, and are rounded off to
"multiples of shiftwidth.  Tabs and trailing spaces are shown visually
set tabstop=8
set softtabstop=4
set shiftwidth=4
set expandtab
set shiftround
set listchars=tab:\ \ ,trail:Â·

"Lines are wrapped instead of hidden, are wrapped at (decently) good points,
"and backspace is able to kill indents, line breaks, and things behind where
"insert mode started
set wrap
set linebreak
set list
set backspace=indent,eol,start

"attemp to prevent annoying multiline prompts.  Show commands that are
"partially complete in the statusline.  Show absolute cursor pos in bottom
"right and relative numbers on the left.  I love relativenumber.
set shortmess=atI
set showcmd
set ruler
set relativenumber

"Give cursor a little bit of breathing room at the top and bottom of the
"screen.  Do not be compatible with vi.  Search incrementally instead of
"waiting.  Ignore case, unless caps are used.  Default to /g for s/
set scrolloff=2
set nocompatible
set incsearch
set ignorecase
set smartcase
set gdefault

"use case when caps     /g by default           no complete import  enhanced tab complete
"Don't bother looking at all imports when doing tab completion.  Enable
"enhanced tab complete.  Only complete to longest match shared by all items.
"List all matching items, with extra detail.  Enable omnicompletion when
"available.  No more than 10 items at a time in insert mode completion.
set complete-=i
set wildmenu
set wildmode=longest,list,full
set ofu=syntaxcomplete#Complete
set pumheight=10
set completeopt=menuone,longest,preview

"-----------------------------------------------------------------------------
"Minor extension stuff
"-----------------------------------------------------------------------------
let g:miniBufExplorerMoreThanOne = 1
let g:pydiction_location = '~/.vim/vimfiles/ftplugin/pydiction/complete-dict'
"because tagbar and minubufexplorer can be *really* annoying together
function! ToggleOggleOoo()
    TagbarToggle
    let buf = bufname("%")
    if buf == "-MiniBufExplorer-"
        wincmd j
    elseif buf == "__Tagbar__"
        wincmd h| wincmd j| wincmd l| wincmd l
        TagbarSetFoldlevel 1
        exe 'norm! 2j'
    endif
endfunction
map <silent> <Leader><C-t> :call ToggleOggleOoo()<Cr>
let g:tagbar_compact = 1| let g:tagbar_autofocus = 1

"-----------------------------------------------------------------------------
"Autocommands
"-----------------------------------------------------------------------------
"takes care of how autocomplete menus should appear and disappear
au CursorMovedI * if pumvisible() == 0|pclose|endif
au InsertLeave * if pumvisible() == 0|pclose|endif

"au BufNewFile *.pl s-^-#!/usr/bin/perl\r\ruse strict;\ruse warnings;\r\r-|normal 
au BufNewFile *.pl 0r ~/.vim/skeleton/skeleton.pl

"-----------------------------------------------------------------------------
"Misc
"-----------------------------------------------------------------------------
"Attemp to make a few things look nicer, primarily because I am always using a
"transparent background.  My jellybeans colorscheme is also heavily
"customized/pillaged
hi clear Pmenu
hi Pmenu term=bold ctermfg=81 ctermbg=darkgrey guifg=Cyan

hi clear MatchParen
hi MatchParen ctermbg=90

hi clear SpecialKey
hi SpecialKey ctermfg=81 guifg=Cyan

hi Statement ctermfg=31
hi Comment ctermfg=245
