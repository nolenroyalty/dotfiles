"-----------------------------------------------------------------------------
"Settings to run first
"-----------------------------------------------------------------------------
"start pathogen plugins         filetype based logic/indenting  enable custom syntax    ; is so good        use heavily modified jellybeans
call pathogen#infect()|         filetype plugin indent on|      syntax enable|          let mapleader = ";"|colorscheme jellybeans

"-----------------------------------------------------------------------------
"Works in progress
"-----------------------------------------------------------------------------
function! GenerateTmpFilename()
    let ftypedict = {"python": "py", "vim": "vim", "perl": "pl", "sh": "sh", "zsh": "zsh"}
    return strftime("%m-%d-%y__%H:%M:%S").".".get(ftypedict, &filetype, "tmp")
endfunction

map <Leader><C-w> :r ~/.dotfiles_config<Cr>0df=v$d:w <C-r>"/tmp/<C-r>=GenerateTmpFilename()<Cr><Cr>

"c-xc-h search stack ovreflow in insert mode                         ;c-h search stack overflow in normal mode
imap <C-x><C-h> <C-o>:call StackoverflowQuery()<Cr>|                 nnoremap <Leader><C-h> :call StackoverflowQuery()<Cr>

"-----------------------------------------------------------------------------
"Mappings
"-----------------------------------------------------------------------------
"c-a start of line               c-e end of line                     c-f right               c-b left            c-n next command    c-p previous command
cno <C-a> <Home>|                cno <C-e> <End>|                    cno <C-f> <Right>|      cno <C-b> <Left>|   cno <C-n> <Down>|   cno <C-p> <Up>|

"alt-a start of line             alt-e end of line                   alt-f one word          f alt-b one word b  double escape is real escape
cno a <Home>|                  cno e <End>|                      cno f <C-Right>|      cno b <C-Left>|   cno  <End><C-u>
ino a <Home>|                  ino e <End>|                      ino f <C-Right>|      ino b <C-Left>|   ino  

"c-j jump down                   c-k jump up                         c-h start of text       c-l end of line
map <C-j> 15j|                   map <C-k> 15k|                      map <C-h> ^|            map <C-l> $

"tag to indent                   s-tab unindent                      tab indent              s-tab unindent
nmap <tab> v>><esc>|             nmap <S-tab> v<<<esc>|              vmap <tab> >gv|         vmap <S-tab> <gv

"z[h]igh                         z[l]ow                              z[m]id                  ZZ wqa
nmap zh z<Cr>|                   nmap zl zb|                         nmap zm z.|             nmap ZZ :wqa<Cr>

"Q to play macro q               same in visual mode                 ;w write file           ;W sudo write file
nn Q @q|                         vn Q @q|                            nmap <Leader>w :w<Cr>|  map <Leader>W :w !sudo tee %

";b jump to buffer               ;` last buffer                      c-n next buffer         c-p prev buffer
map <Leader>b :b |               map <Leader>` :b#<Cr>|              nmap <C-n> :bn<Cr>|     nmap <C-p> :bp<Cr>

";j comment line(s)              ;J uncomment line(s)                ;c-d copy and comment out line(to save a copy)
map <Leader>j <Leader>cc|        map <Leader>J <Leader>cu|           map <Leader><C-d> Ypk<Leader>cc

"c-f file completion             c-/ next file level                 c-\ toggle highlight search
imap <C-f> <C-x><C-f>|           imap <C-_> /<BS><C-x><C-f>|         nn <C-\> :set hlsearch! hlsearch?<Cr>

"vv to open vimrc                ;rr reload vimrc                    ;e edit new file        ;vc-v edit vimrc in split
map <Leader>vv :e ~/.vimrc<Cr>|  map <Leader>rr :sourc ~/.vimrc<Cr>| map <Leader>e :e |      map <Leader>v<C-v> :vs ~/.vimrc<Cr>

"-----------------------------------------------------------------------------
"Settings
"-----------------------------------------------------------------------------
"tab=8 spaces                   but pretends to be 4            4 spaces per autoindent tab using spaces    round indents to multiple of shiftwidth
set tabstop=8|                  set softtabstop=4|              set shiftwidth=4|       set expandtab|      set shiftround

"show tabs, trailing spaces     wrap lines so you can see them  wrap lines sanely       show tabs           can backspace indents, line breaks, start of the insert
set listchars=tab:\ \ ,trail:Â·| set wrap|                       set linebreak|          set list|           set backspace=indent,eol,start

"try to avoid annoying prompts  show partial commands           show pos bottom right   relativenumbers!!   always have 2 lines of room at top and bottom
set shortmess=atI|              set showcmd|                    set ruler|              set relativenumber| set scrolloff=2

"not vi compatible              incremental search              ignore case             (unless using caps) /g search by default, /g to disable
set nocompatible|               set incsearch|                  set ignorecase|         set smartcase|      set gdefault

"enable omnicompletion stuff    max 10 items in i-completion    always use menu, insert longest match and no more, show preview info
set ofu=syntaxcomplete#Complete|set pumheight=10|               set completeopt=menuone,longest,preview

"complete best match first      don't complete all imports      enhanced tab complete
set wildmode=longest,list,full| set complete-=i|                set wildmenu

"-----------------------------------------------------------------------------
"Minor extension stuff
"-----------------------------------------------------------------------------
let g:miniBufExplorerMoreThanOne = 1
let g:pydiction_location = '~/.vim/vimfiles/ftplugin/pydiction/complete-dict'
"because tagbar and minubufexplorer can be *really* annoying together
function! ToggleOggleOoo()
    TagbarToggle
    let buf = bufname("%")
    if buf == "-MiniBufExplorer-"
        wincmd j
    elseif buf == "__Tagbar__"
        wincmd h| wincmd j| wincmd l| wincmd l
        TagbarSetFoldlevel 1
        exe 'norm! 2j'
    endif
endfunction
map <silent> <Leader><C-t> :call ToggleOggleOoo()<Cr>
let g:tagbar_compact = 1| let g:tagbar_autofocus = 1

"-----------------------------------------------------------------------------
"Autocommands
"-----------------------------------------------------------------------------
"takes care of how autocomplete menus should appear and disappear
au CursorMovedI * if pumvisible() == 0|pclose|endif
au InsertLeave * if pumvisible() == 0|pclose|endif

"au BufNewFile *.pl s-^-#!/usr/bin/perl\r\ruse strict;\ruse warnings;\r\r-|normal 
au BufNewFile *.pl 0r ~/.vim/skeleton/skeleton.pl

"-----------------------------------------------------------------------------
"Misc
"-----------------------------------------------------------------------------
"clear old pmenu                        use cyan on darkkgrey menu for readability
hi clear Pmenu|                         hi Pmenu term=bold ctermfg=81 ctermbg=darkgrey guifg=Cyan
"clear old matchparen                   make matchparen actually readable
hi clear MatchParen|                    hi MatchParen ctermbg=90
"clear old specialkey                   make specialkey not invisible(things like )
hi clear SpecialKey|                    hi SpecialKey ctermfg=81 guifg=Cyan
"highlight statements in a nice color   attempt to make comments look good
hi Statement ctermfg=31|                hi Comment ctermfg=245
