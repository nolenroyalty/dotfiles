"-----------------------------------------------------------------------------
"Settings to run first
"-----------------------------------------------------------------------------
"start pathogen plugins         filetype based logic/indenting  enable custom syntax
call pathogen#infect()|         filetype plugin indent on|      syntax enable

"; is so good                   use heavily modified jellybeans
let mapleader = ";"|            colorscheme jellybeans

"-----------------------------------------------------------------------------
"Works in progress
"-----------------------------------------------------------------------------
function! GenerateTmpFilename()
    let ftypedict = {"python": "py", "vim": "vim", "perl": "pl", "sh": "sh", "zsh": "zsh"}
    return strftime("%m-%d-%y__%H:%M:%S").".".get(ftypedict, &filetype, "tmp")
endfunction

map <Leader><C-w> :r ~/.dotfiles_config<Cr>0df=v$d:w <C-r>"/tmp/<C-r>=GenerateTmpFilename()<Cr><Cr>

"c-xc-h search stack ovreflow in insert mode
imap <C-x><C-h> <C-o>:call StackoverflowQuery()<Cr>

";c-h search stack overflow in normal mode
nnoremap <Leader><C-h> :call StackoverflowQuery()<Cr>
"-----------------------------------------------------------------------------
"Mappings
"-----------------------------------------------------------------------------
"c-a start of line      c-e end of line         c-f right           c-b left
cno <C-a> <Home>|       cno <C-e> <End>|        cno <C-f> <Right>|  cno <C-b> <Left>

"c-n next command       c-p previous command    a-a start of line   a-e end of line
cno <C-n> <Down>|       cno <C-p> <Up>|         cno a <Home>|     cno e <End>

"a-f foward word        a-b backwards word      double esc for esc  double esc for esc
cno f <C-Right>|      cno b <C-Left>|       ino  |        cno  <End><C-u>

"a-f forward word       a-b backwards word      a-a start of line   a-e end of line
ino f <C-Right>|      ino b <C-Left>|       ino a <Home>|     ino e <End>

"c-j jump down          c-k jump up             c-h start of text   c-l end of line
map <C-j> 15j|          map <C-k> 15k|          map <C-h> ^|        map <C-l> $

"tag to indent          s-tab unindent          ab indent           s-tab unindent
nmap <tab> v>><esc>|    nmap <S-tab> v<<<esc>|  map <tab> >gv|      vmap <S-tab> <gv

"z[h]igh                z[l]ow                  [m]id               ZZ wqa
nmap zh z<Cr>|          nmap zl zb|             map zm z.|          nmap ZZ :wqa<Cr>

"Q to play macro q      ;w to write file        Q in visual too     ;W to write file with sudo
nn Q @q|                map <Leader>w :w<Cr>|   vn Q @q|            map <Leader>W :w !sudo tee %

";b jump to buffer      ;` last buffer          -n next buffer      c-p prev buffer
map <Leader>b :b |      map <Leader>` :b#<Cr>|  map <C-n> :bn<Cr>|  nmap <C-p> :bp<Cr>

";j comment line(s)     ;J uncomment line(s)    ;c-d copy and comment out line(to save a copy)
map <Leader>j ;cc|      map <Leader>J ;cu|      map <Leader><C-d> Ypk<Leader>cc

"c-f file completion    ;e to open file         c-/ next file level
imap <C-f> <C-x><C-f>|  map <Leader>e :e |      imap <C-_> /<BS><C-x><C-f>

"vv to open vimrc                               vc-v to open vimrc in vertical split
map <Leader>vv :e ~/.vimrc<Cr>|                 map <Leader>v<C-v> :vs ~/.vimrc<Cr>

"rr to reload vimrc                             c-\ to toggle highlight search
map <Leader>rr :sourc ~/.vimrc<Cr>|             map <C-\> :set hlsearch! hlsearch?<Cr>


"-----------------------------------------------------------------------------
"Settings
"-----------------------------------------------------------------------------
"tab=8 spaces           but pretends to be 4    4 spaces per autoindent
set tabstop=8|          set softtabstop=4|      set shiftwidth=4

"tab using spaces       indent for shiftwidth   show tabs, trailing spaces
set expandtab|          set shiftround|         set listchars=tab:\ \ ,trail:Â·

"don't hide lines       wrap lines sanely       show tabs           can backspace indents, line breaks, start of the insert
 set wrap|              set linebreak|          set list|           set backspace=indent,eol,start

"kill some prompts      show partial commands   show pos            relativenumbers!!
set shortmess=atI|      set showcmd|            set ruler|          set relativenumber

"breathing room         no vi compatible        incremental search  ignore case
set scrolloff=2|        set nocompatible|       set incsearch|      set ignorecase

"use case when caps     /g by default           no complete import  enhanced tab complete
set smartcase|          set gdefault|           set complete-=i|    set wildmenu

"go for longest complete match                  enable omnicompletion
set wildmode=longest,list,full|                 set ofu=syntaxcomplete#Complete

"max 10 items for insert completion             always use menu, insert longest match and no more, show preview info
set pumheight=10|                               set completeopt=menuone,longest,preview

"-----------------------------------------------------------------------------
"Minor extension stuff
"-----------------------------------------------------------------------------
let g:miniBufExplorerMoreThanOne = 1
let g:pydiction_location = '~/.vim/vimfiles/ftplugin/pydiction/complete-dict'
"because tagbar and minubufexplorer can be *really* annoying together
function! ToggleOggleOoo()
    TagbarToggle
    let buf = bufname("%")
    if buf == "-MiniBufExplorer-"
        wincmd j
    elseif buf == "__Tagbar__"
        wincmd h| wincmd j| wincmd l| wincmd l
        TagbarSetFoldlevel 1
        exe 'norm! 2j'
    endif
endfunction
map <silent> <Leader><C-t> :call ToggleOggleOoo()<Cr>
let g:tagbar_compact = 1| let g:tagbar_autofocus = 1

"-----------------------------------------------------------------------------
"Autocommands
"-----------------------------------------------------------------------------
"takes care of how autocomplete menus should appear and disappear
au CursorMovedI * if pumvisible() == 0|pclose|endif
au InsertLeave * if pumvisible() == 0|pclose|endif

"au BufNewFile *.pl s-^-#!/usr/bin/perl\r\ruse strict;\ruse warnings;\r\r-|normal 
au BufNewFile *.pl 0r ~/.vim/skeleton/skeleton.pl

"-----------------------------------------------------------------------------
"Misc
"-----------------------------------------------------------------------------
"clear old pmenu                        use cyan on darkkgrey menu for readability
hi clear Pmenu|                         hi Pmenu term=bold ctermfg=81 ctermbg=darkgrey guifg=Cyan
"clear old matchparen                   make matchparen actually readable
hi clear MatchParen|                    hi MatchParen ctermbg=90
"clear old specialkey                   make specialkey not invisible(things like )
hi clear SpecialKey|                    hi SpecialKey ctermfg=81 guifg=Cyan
"highlight statements in a nice color   attempt to make comments look good
hi Statement ctermfg=31|                hi Comment ctermfg=245
