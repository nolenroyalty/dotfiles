!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<C-Down>	plugin/minibufexpl.vim	/^  noremap <C-Down>  <C-W>j$/;"	m
<C-H>	plugin/minibufexpl.vim	/^  noremap <C-H> <C-W>h$/;"	m
<C-J>	plugin/minibufexpl.vim	/^  noremap <C-J> <C-W>j$/;"	m
<C-K>	plugin/minibufexpl.vim	/^  noremap <C-K> <C-W>k$/;"	m
<C-L>	plugin/minibufexpl.vim	/^  noremap <C-L> <C-W>l$/;"	m
<C-Left>	plugin/minibufexpl.vim	/^  noremap <C-Left>  <C-W>h$/;"	m
<C-R>	ftplugin/python/pyflakes.vim	/^noremap <buffer><silent> <C-R> <C-R>:PyflakesUpdate<CR>$/;"	m
<C-Right>	plugin/minibufexpl.vim	/^  noremap <C-Right> <C-W>l$/;"	m
<C-S-TAB>	plugin/minibufexpl.vim	/^  noremap <C-S-TAB> :call <SID>CycleBuffer(0)<CR>:<BS>$/;"	m
<C-S-TAB>	plugin/minibufexpl.vim	/^  noremap <C-S-TAB> <C-W>W$/;"	m
<C-TAB>	plugin/minibufexpl.vim	/^  noremap <C-TAB>   :call <SID>CycleBuffer(1)<CR>:<BS>$/;"	m
<C-TAB>	plugin/minibufexpl.vim	/^  noremap <C-TAB>   <C-W>w$/;"	m
<C-Up>	plugin/minibufexpl.vim	/^  noremap <C-Up>    <C-W>k$/;"	m
<C-\>	vimrc/main.vim	/^noremap <C-\\> :set hlsearch! hlsearch?<CR>$/;"	m
<C-a>	vimrc/main.vim	/^cnoremap <C-a> <Home>$/;"	m
<C-b>	vimrc/main.vim	/^cnoremap <C-b> <Left>$/;"	m
<C-d>	vimrc/main.vim	/^cnoremap <C-d> <Del>$/;"	m
<C-e>	vimrc/main.vim	/^cnoremap <C-e> <End>$/;"	m
<C-f>	vimrc/main.vim	/^cnoremap <C-f> <Right>$/;"	m
<C-h>	vimrc/main.vim	/^map <C-h> ^$/;"	m
<C-j>	vimrc/main.vim	/^map <C-j> 15j$/;"	m
<C-k>	vimrc/main.vim	/^map <C-k> 15k$/;"	m
<C-l>	vimrc/main.vim	/^map <C-l> \$$/;"	m
<C-n>	vimrc/main.vim	/^cnoremap <C-n> <Down>$/;"	m
<C-n>	vimrc/main.vim	/^nmap <C-n> :bn<Cr>$/;"	m
<C-p>	vimrc/main.vim	/^cnoremap <C-p> <Up>$/;"	m
<C-p>	vimrc/main.vim	/^nmap <C-p> :bp<Cr>$/;"	m
<C-s>	after/plugin/snipMate.vim	/^ino <silent> <C-s> <c-r>=TriggerSnippet()<cr>$/;"	m
<Leader><C-d>	vimrc/main.vim	/^map <Leader><C-d> yypk<Leader>cc$/;"	m
<Leader><C-t>	vimrc/plugin.vim	/^map <Leader><C-t> :TagbarToggle<Cr>$/;"	m
<Leader>D	vimrc/main.vim	/^map <Leader>D <C-w>k<C-w>kd<Cr><C-w>j$/;"	m
<Leader>J	vimrc/main.vim	/^map <Leader>J <Leader>cu$/;"	m
<Leader>W	vimrc/main.vim	/^map <Leader>W :w !sudo tee %$/;"	m
<Leader>`	vimrc/main.vim	/^map <Leader>` :b#<Cr>$/;"	m
<Leader>b	vimrc/main.vim	/^map <Leader>b :b $/;"	m
<Leader>e	vimrc/main.vim	/^map <Leader>e :e $/;"	m
<Leader>h	vimrc/main.vim	/^map <Leader>h :e ~\/$/;"	m
<Leader>j	vimrc/main.vim	/^map <Leader>j <Leader>cc$/;"	m
<Leader>mbc	plugin/minibufexpl.vim	/^  map <unique> <Leader>mbc <Plug>CMiniBufExplorer$/;"	m
<Leader>mbe	plugin/minibufexpl.vim	/^  map <unique> <Leader>mbe <Plug>MiniBufExplorer$/;"	m
<Leader>mbt	plugin/minibufexpl.vim	/^  map <unique> <Leader>mbt <Plug>TMiniBufExplorer$/;"	m
<Leader>mbu	plugin/minibufexpl.vim	/^  map <unique> <Leader>mbu <Plug>UMiniBufExplorer$/;"	m
<Leader>mq	plugin/minibufexpl.vim	/^  map <unique> <Leader>mq <Plug>MBEMarkCurrent$/;"	m
<Leader>vv	vimrc/main.vim	/^map <Leader>vv :e ~\/.vim\/vimrc\/main.vim<Cr>$/;"	m
<Plug>CMiniBufExplorer	plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>CMiniBufExplorer :call <SID>StopExplorer(1)<CR>:<BS>$/;"	m
<Plug>MBEMarkCurrent	plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>MBEMarkCurrent :call <SID>MarkCurrentBuffer(bufname("%"),1)<CR>:<BS>$/;"	m
<Plug>MiniBufExplorer	plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>MiniBufExplorer  :call <SID>StartExplorer(1, -1, bufnr("%"))<CR>:<BS>$/;"	m
<Plug>TMiniBufExplorer	plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>TMiniBufExplorer :call <SID>ToggleExplorer()<CR>:<BS>$/;"	m
<Plug>UMiniBufExplorer	plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>UMiniBufExplorer :call <SID>AutoUpdate(-1,bufnr("%"))<CR>:<BS>$/;"	m
<S-C-s>	after/plugin/snipMate.vim	/^ino <silent> <S-C-s> <c-r>=BackwardsSnippet()<cr>$/;"	m
<S-Tab>	after/ftplugin/python_pydiction.vim	/^inoremap <silent> <buffer> <S-Tab> $/;"	m
<S-tab>	vimrc/main.vim	/^nmap <S-tab> v<<<esc>$/;"	m
<S-tab>	vimrc/main.vim	/^vmap <S-tab> <gv$/;"	m
<Tab>	after/ftplugin/python_pydiction.vim	/^inoremap <silent> <buffer> <Tab> $/;"	m
<c-r><C-s>	after/plugin/snipMate.vim	/^ino <silent> <c-r><C-s> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<plug>NERDCommenterAltDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<tab>	vimrc/main.vim	/^nmap <tab> v>><esc>$/;"	m
<tab>	vimrc/main.vim	/^vmap <tab> >gv$/;"	m
ALPHABET	vimrc/general_settings.vim	/^let ALPHABET = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"$/;"	v
ASSIGN	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def ASSIGN(self, node):$/;"	m	class:Checker
AUGASSIGN	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def AUGASSIGN(self, node):$/;"	m	class:Checker
ActivatePyflakesQuickFixWindow	ftplugin/python/pyflakes.vim	/^    function s:ActivatePyflakesQuickFixWindow()$/;"	f
Add	bundle/tlib_vim/test/tlib.vim	/^fun! Add(a,b)$/;"	f
AddLeftDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
AddLeftDelimAligned	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
AddRightDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
AddRightDelimAligned	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
AddScopedTags	autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
AltMultipart	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
AppendCommentToLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
Argument	ftplugin/python/pyflakes/pyflakes/checker.py	/^class Argument(Binding):$/;"	c
Assignment	ftplugin/python/pyflakes/pyflakes/checker.py	/^class Assignment(Binding):$/;"	c
AutoUpdate	autoload/tagbar.vim	/^function! s:AutoUpdate(fname)$/;"	f
AutoUpdate	plugin/minibufexpl.vim	/^function! <SID>AutoUpdate(delBufNum,currBufName)$/;"	f
AutoUpdateCheck	plugin/minibufexpl.vim	/^function! <SID>AutoUpdateCheck(currBuf)$/;"	f
BMRU_Push	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! s:BMRU_Push(bnr) "{{{3$/;"	f
BackwardsSnippet	plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BaseTag._getPrefix	autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() dict$/;"	f
BaseTag._init	autoload/tagbar.vim	/^function! s:BaseTag._init(name) dict$/;"	f
BaseTag.closeFold	autoload/tagbar.vim	/^function! s:BaseTag.closeFold() dict$/;"	f
BaseTag.getClosedParentTline	autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() dict$/;"	f
BaseTag.getPrototype	autoload/tagbar.vim	/^function! s:BaseTag.getPrototype() dict$/;"	f
BaseTag.initFoldState	autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() dict$/;"	f
BaseTag.isFoldable	autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() dict$/;"	f
BaseTag.isFolded	autoload/tagbar.vim	/^function! s:BaseTag.isFolded() dict$/;"	f
BaseTag.isKindheader	autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() dict$/;"	f
BaseTag.isNormalTag	autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() dict$/;"	f
BaseTag.isPseudoTag	autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() dict$/;"	f
BaseTag.openFold	autoload/tagbar.vim	/^function! s:BaseTag.openFold() dict$/;"	f
BaseTag.openParents	autoload/tagbar.vim	/^function! s:BaseTag.openParents() dict$/;"	f
BaseTag.setFolded	autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) dict$/;"	f
Binding	ftplugin/python/pyflakes/pyflakes/checker.py	/^class Binding(object):$/;"	c
BuildBufferList	plugin/minibufexpl.vim	/^function! <SID>BuildBufferList(delBufNum, updateBufList, currBufName)$/;"	f
BuildConfig	ftplugin/perl/omniperl.vim	/^func! s:BuildConfig( var_hash)$/;"	f
BuildModuleList	ftplugin/perl/omniperl.vim	/^func! s:BuildModuleList()$/;"	f
BuildModuleListFromINC	ftplugin/perl/omniperl.vim	/^func! s:BuildModuleListFromINC()$/;"	f
BuildModuleListFromINCRec	ftplugin/perl/omniperl.vim	/^func! s:BuildModuleListFromINCRec( dir, prefix )$/;"	f
BuildModuleListFromMan	ftplugin/perl/omniperl.vim	/^func! s:BuildModuleListFromMan()$/;"	f
BuildScriptCmd	ftplugin/perl/omniperl.vim	/^func! s:BuildScriptCmd( opts )$/;"	f
BuildTabStops	autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
CLASSDEF	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def CLASSDEF(self, node):$/;"	m	class:Checker
CMiniBufExplorer	plugin/minibufexpl.vim	/^  command! CMiniBufExplorer  call <SID>StopExplorer(1)$/;"	c
CanCommentLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
CanPlaceCursor	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
CanSexyCommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
CanToggleCommentLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
CheckAgentReturnValue	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:CheckAgentReturnValue(name, value) "{{{3$/;"	f
CheckCtags	nouse/easytags.vim	/^function! s:CheckCtags(name, version)$/;"	f
CheckExCtagsVersion	autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output)$/;"	f
CheckFTCtags	autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype)$/;"	f
CheckForExCtags	autoload/tagbar.vim	/^function! s:CheckForExCtags()$/;"	f
CheckForLastWindow	plugin/minibufexpl.vim	/^function! <SID>CheckForLastWindow()$/;"	f
CheckMouseClick	autoload/tagbar.vim	/^function! s:CheckMouseClick()$/;"	f
CheckRootDirForDupes	plugin/minibufexpl.vim	/^function! CheckRootDirForDupes(level,path1,path2)$/;"	f
CheckTests	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^class CheckTests(TestCase):$/;"	c
Checker	ftplugin/python/pyflakes/pyflakes/checker.py	/^class Checker(object):$/;"	c
ChgDir	autoload/vimball.vim	/^fun! s:ChgDir(newdir)$/;"	f
ChooseSnippet	plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
ClassScope	ftplugin/python/pyflakes/pyflakes/checker.py	/^class ClassScope(Scope):$/;"	c
CleanModTrackingList	plugin/minibufexpl.vim	/^function! <SID>CleanModTrackingList(currBuf)$/;"	f
CleanUp	autoload/tagbar.vim	/^function! s:CleanUp()$/;"	f
CleanUp	ftplugin/perl/omniperl.vim	/^func! s:CleanUp()$/;"	f
CleanupFileinfo	autoload/tagbar.vim	/^function! s:CleanupFileinfo(fname)$/;"	f
ClearPyflakes	ftplugin/python/pyflakes.vim	/^    function s:ClearPyflakes()$/;"	f
Close	ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CloseFold	autoload/tagbar.vim	/^function! s:CloseFold()$/;"	f
CloseWindow	autoload/tagbar.vim	/^function! s:CloseWindow()$/;"	f
CollectFileInfos	ftplugin/perl/omniperl.vim	/^func! s:CollectFileInfos( )$/;"	f
CommentBlock	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
CommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
CommentLinesMinimal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
CommentLinesSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
CommentLinesToggle	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
CommentRegion	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
CompareBufferNrByMRU	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! s:CompareBufferNrByMRU(a, b) "{{{3$/;"	f
CompareBuffernameByBasename	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! s:CompareBuffernameByBasename(a, b) "{{{3$/;"	f
CompareByKind	autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2)$/;"	f
CompareByLine	autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2)$/;"	f
ConvertLeadingSpacesToTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
ConvertLeadingTabsToSpaces	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
ConvertLeadingWhiteSpace	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
Count	autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
CountHelper	bundle/tlib_vim/autoload/tlib/string.vim	/^function! s:CountHelper() "{{{3$/;"	f
CountNonESCedOccurances	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
CreateAutocommands	autoload/tagbar.vim	/^function! s:CreateAutocommands()$/;"	f
CreateDelimMapFromCms	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CreateDelimMapFromCms()$/;"	f
CreateMaps	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
CreatePseudoTag	autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo)$/;"	f
CycleBuffer	plugin/minibufexpl.vim	/^function! <SID>CycleBuffer(forward)$/;"	f
DEBUG	plugin/minibufexpl.vim	/^function! <SID>DEBUG(msg, level)$/;"	f
DICTCOMP	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def DICTCOMP(self, node):$/;"	m	class:Checker
DefineSnips	plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
DetectFiletype	autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr)$/;"	f
DisplayBuffers	plugin/minibufexpl.vim	/^function! <SID>DisplayBuffers(delBufNum,currBufName)$/;"	f
DoesBlockHaveDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
DoesBlockHaveMultipartDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
DuplicateArgument	ftplugin/python/pyflakes/pyflakes/messages.py	/^class DuplicateArgument(Message):$/;"	c
EditCallback	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:EditCallback(...) "{{{3$/;"	f
Esc	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
EscapeCtagsCmd	autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...)$/;"	f
EscapeTilde	plugin/minibufexpl.vim	/^function! <SID>EscapeTilde(str)$/;"	f
ExecuteCtags	autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd)$/;"	f
ExecuteCtagsOnFile	autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, ftype)$/;"	f
ExportBinding	ftplugin/python/pyflakes/pyflakes/checker.py	/^class ExportBinding(Binding):$/;"	c
ExtractSnips	plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
FOR	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def FOR(self, node):$/;"	m	class:Checker
FU	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('from moo import fu as FU, bar as FU', m.RedefinedWhileUnused, m.UnusedImport)$/;"	i
FU	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu as FU, bar as FU', m.RedefinedWhileUnused, m.UnusedImport)$/;"	i
FUNCTIONDEF	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def FUNCTIONDEF(self, node):$/;"	m	class:Checker
False	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu and False')$/;"	i
False	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu or False')$/;"	i
FileInfo.New	autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype) dict$/;"	f
FileInfo.clearOldFolds	autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() dict$/;"	f
FileInfo.closeKindFold	autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) dict$/;"	f
FileInfo.openKindFold	autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) dict$/;"	f
FileInfo.reset	autoload/tagbar.vim	/^function! s:FileInfo.reset() dict$/;"	f
FileInfo.sortTags	autoload/tagbar.vim	/^function! s:FileInfo.sortTags() dict$/;"	f
FilePath	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^from twisted.python.filepath import FilePath$/;"	i
Filename	autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
FindBoundingLinesOfSexyCom	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
FindCreateWindow	plugin/minibufexpl.vim	/^function! <SID>FindCreateWindow(bufName, forceEdge, isExplorer, doDebug)$/;"	f
FindDelimiterIndex	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
FindIdent	ftplugin/perl/omniperl.vim	/^func! s:FindIdent( ident, calls )$/;"	f
FindWindow	plugin/minibufexpl.vim	/^function! <SID>FindWindow(bufName, doDebug)$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
FunctionDefinition	ftplugin/python/pyflakes/pyflakes/checker.py	/^class FunctionDefinition(Binding):$/;"	c
FunctionScope	ftplugin/python/pyflakes/pyflakes/checker.py	/^class FunctionScope(Scope):$/;"	c
GLOBAL	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def GLOBAL(self, node):$/;"	m	class:Checker
GetCompHash	ftplugin/perl/omniperl.vim	/^func! s:GetCompHash( module )$/;"	f
GetImportedMembers	ftplugin/perl/omniperl.vim	/^func! s:GetImportedMembers( )$/;"	f
GetModuleConf	ftplugin/perl/omniperl.vim	/^func! s:GetModuleConf( module )$/;"	f
GetNearbyTag	autoload/tagbar.vim	/^function! s:GetNearbyTag()$/;"	f
GetNthElement	bundle/tlib_vim/autoload/tlib/list.vim	/^function! s:GetNthElement(n, lists, default) "{{{3$/;"	f
GetPyflakesMessage	ftplugin/python/pyflakes.vim	/^    function s:GetPyflakesMessage()$/;"	f
GetQuickFixStackCount	ftplugin/python/pyflakes.vim	/^    function s:GetQuickFixStackCount()$/;"	f
GetSelectedBuffer	plugin/minibufexpl.vim	/^function! <SID>GetSelectedBuffer()$/;"	f
GetSexyComLeft	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
GetSexyComMarker	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
GetSexyComRight	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
GetSnippet	plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetSortValue	ftplugin/perl/omniperl.vim	/^func! s:GetSortValue( kind )$/;"	f
GetTagInfo	autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo)$/;"	f
GetUserTypeDefs	autoload/tagbar.vim	/^function! s:GetUserTypeDefs()$/;"	f
GotoNextToplevelTag	autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction)$/;"	f
HELP_MESSAGE	ftplugin/perl/omniperl.pl	/^sub HELP_MESSAGE$/;"	s
Handle_UnknownIdent	ftplugin/perl/omniperl.vim	/^func! s:Handle_UnknownIdent( base )$/;"	f
HasCStyleComments	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
HasEligibleBuffers	plugin/minibufexpl.vim	/^function! <SID>HasEligibleBuffers(delBufNum)$/;"	f
HasLeadingTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
HasMultipartDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
Highlight	plugin/pydoc.vim	/^function! Highlight(name)$/;"	f
HighlightTag	autoload/tagbar.vim	/^function! s:HighlightTag()$/;"	f
HighlightTags	nouse/easytags.vim	/^command! -bar HighlightTags call xolox#easytags#highlight()$/;"	c
IMPORT	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def IMPORT(self, node):$/;"	m	class:Checker
IMPORTFROM	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def IMPORTFROM(self, node):$/;"	m	class:Checker
IgnoreBuffer	plugin/minibufexpl.vim	/^function! <SID>IgnoreBuffer(buf)$/;"	f
ImportShadowedByLoopVar	ftplugin/python/pyflakes/pyflakes/messages.py	/^class ImportShadowedByLoopVar(Message):$/;"	c
ImportStarUsed	ftplugin/python/pyflakes/pyflakes/messages.py	/^class ImportStarUsed(Message):$/;"	c
Importation	ftplugin/python/pyflakes/pyflakes/checker.py	/^class Importation(Binding):$/;"	c
InSub	ftplugin/perl/omniperl.vim	/^func! s:InSub( lnr )$/;"	f
Init	autoload/tagbar.vim	/^function! s:Init()$/;"	f
Init	bundle/tlib_vim/autoload/tlib/input.vim	/^function! s:Init(world, cmd) "{{{3$/;"	f
Init	ftplugin/perl/omniperl.vim	/^func! s:Init()$/;"	f
InitEasyTags	nouse/easytags.vim	/^function! s:InitEasyTags(version)$/;"	f
InitTypes	autoload/tagbar.vim	/^function! s:InitTypes()$/;"	f
InitVariable	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
InitWindow	autoload/tagbar.vim	/^function! s:InitWindow(autoclose)$/;"	f
InsertSelectedItems	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:InsertSelectedItems(rv, current) "{{{3$/;"	f
InvertComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
IsCommented	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
IsCommentedFromStartOfLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
IsCommentedNormOrSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
IsCommentedOuttermost	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedOuttermost(left, right, leftAlt, rightAlt, line)$/;"	f
IsDelimValid	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
IsEscaped	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
IsInSexyComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
IsMultiComment	ftplugin/perl/omniperl.vim	/^func! s:IsMultiComment( lnr )$/;"	f
IsNumEven	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
IsSexyComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
IsValidFile	autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype)$/;"	f
JumpToTag	autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar)$/;"	f
K	plugin/pydoc.vim	/^nnoremap <silent> <buffer> K :call ShowPyDoc(expand("<cword>"), 1)<CR>$/;"	m
KindheaderTag.New	autoload/tagbar.vim	/^function! s:KindheaderTag.New(name) dict$/;"	f
KindheaderTag.closeFold	autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() dict$/;"	f
KindheaderTag.getPrototype	autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype() dict$/;"	f
KindheaderTag.isFoldable	autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() dict$/;"	f
KindheaderTag.isFolded	autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() dict$/;"	f
KindheaderTag.isKindheader	autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() dict$/;"	f
KindheaderTag.openFold	autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() dict$/;"	f
KindheaderTag.toggleFold	autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() dict$/;"	f
LAMBDA	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def LAMBDA(self, node):$/;"	m	class:Checker
LISTCOMP	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def LISTCOMP(self, node):$/;"	m	class:Checker
LastIndexOfDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
LateFutureImport	ftplugin/python/pyflakes/pyflakes/messages.py	/^class LateFutureImport(Message):$/;"	c
Left	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Left(...)$/;"	f
LeftMostIndx	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
LogDebugMessage	autoload/tagbar.vim	/^function! s:LogDebugMessage(msg)$/;"	f
MBEClick	plugin/minibufexpl.vim	/^function! s:MBEClick()$/;"	f
MBEDeleteBuffer	plugin/minibufexpl.vim	/^function! <SID>MBEDeleteBuffer(prevBufName)$/;"	f
MBEDoubleClick	plugin/minibufexpl.vim	/^function! s:MBEDoubleClick()$/;"	f
MBESelectBuffer	plugin/minibufexpl.vim	/^function! <SID>MBESelectBuffer(split)$/;"	f
MBEbn	plugin/minibufexpl.vim	/^  command! MBEbn call <SID>CycleBuffer(1)$/;"	c
MBEbp	plugin/minibufexpl.vim	/^  command! MBEbp call <SID>CycleBuffer(0)$/;"	c
MRUCmp	plugin/minibufexpl.vim	/^function! <SID>MRUCmp(tab1, tab2)$/;"	f
MRUPop	plugin/minibufexpl.vim	/^function! <SID>MRUPop(buf)$/;"	f
MRUPush	plugin/minibufexpl.vim	/^function! <SID>MRUPush(buf)$/;"	f
MakeCompletionEntry	ftplugin/perl/omniperl.vim	/^func! s:MakeCompletionEntry(module, kind, member, hash )$/;"	f
MakeSnip	plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
MapKeys	autoload/tagbar.vim	/^function! s:MapKeys()$/;"	f
Max	plugin/minibufexpl.vim	/^function! <SID>Max(argOne, argTwo)$/;"	f
Message	ftplugin/python/pyflakes/pyflakes/messages.py	/^class Message(object):$/;"	c
MiniBufExplorer	plugin/minibufexpl.vim	/^  command! MiniBufExplorer  call <SID>StartExplorer(1, -1, bufnr("%"))$/;"	c
MiniBufExplorer	plugin/minibufexpl.vim	/^augroup MiniBufExplorer$/;"	a
MkVimball	plugin/vimballPlugin.vim	/^com! -ra   -complete=file -na=+ -bang MkVimball				call vimball#MkVimball(<line1>,<line2>,<bang>0,<f-args>)$/;"	c
ModuleScope	ftplugin/python/pyflakes/pyflakes/checker.py	/^class ModuleScope(Scope):$/;"	c
Multipart	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Multipart()$/;"	f
NAME	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def NAME(self, node):$/;"	m	class:Checker
NERDComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommenter	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^augroup NERDCommenter$/;"	a
NONE	plugin/minibufexpl.vim	/^augroup NONE$/;"	a
NameCmp	plugin/minibufexpl.vim	/^function! <SID>NameCmp(tab1, tab2)$/;"	f
NameTests	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^class NameTests(TestCase):$/;"	c
NerdEcho	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
None	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; {fu:None}')$/;"	i
NormalTag.New	autoload/tagbar.vim	/^function! s:NormalTag.New(name) dict$/;"	f
NormalTag.getPrototype	autoload/tagbar.vim	/^function! s:NormalTag.getPrototype() dict$/;"	f
NormalTag.isNormalTag	autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() dict$/;"	f
NormalTag.str	autoload/tagbar.vim	/^function! s:NormalTag.str() dict$/;"	f
NumLinesInBuf	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
NumberOfLeadingTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
OmniPerl_Complete	ftplugin/perl/omniperl.vim	/^func! OmniPerl_Complete( findstart, base )$/;"	f
OpenFold	autoload/tagbar.vim	/^function! s:OpenFold()$/;"	f
OpenParents	autoload/tagbar.vim	/^function! s:OpenParents(...)$/;"	f
OpenWindow	autoload/tagbar.vim	/^function! s:OpenWindow(flags)$/;"	f
Options	ftplugin/perl/omniperl.pl	/^Options :$/;"	l
PYDICTION_DICT	vimfiles/ftplugin/pydiction/pydiction.py	/^PYDICTION_DICT = r'complete-dict'$/;"	v
PYDICTION_DICT_BACKUP	vimfiles/ftplugin/pydiction/pydiction.py	/^PYDICTION_DICT_BACKUP = r'complete-dict.last'$/;"	v
ParseTagline	autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo)$/;"	f
Parser	ftplugin/perl/omniperl.vim	/^func! s:Parser()$/;"	f
Pep8	ftplugin/python/pep8.vim	/^function! <SID>Pep8()$/;"	f
PlaceDelimitersAndInsBetween	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
PluginEasyTags	nouse/easytags.vim	/^augroup PluginEasyTags$/;"	a
Pretty	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:Pretty(filter) "{{{3$/;"	f
PrintFormat	bundle/tlib_vim/autoload/tlib/string.vim	/^function! s:PrintFormat(format, string) "{{{3$/;"	f
PrintHelp	autoload/tagbar.vim	/^function! s:PrintHelp()$/;"	f
PrintKinds	autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo)$/;"	f
PrintMe	bundle/tlib_vim/samples/tlib/input/tlib_input_list.vim	/^function! PrintMe(state, items) "{{{3$/;"	f
PrintTag	autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, fileinfo, typeinfo)$/;"	f
ProcessFile	autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype)$/;"	f
ProcessFile	plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessPseudoChildren	autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo)$/;"	f
ProcessPseudoTag	autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo)$/;"	f
ProcessSnippet	autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
PseudoTag.New	autoload/tagbar.vim	/^function! s:PseudoTag.New(name) dict$/;"	f
PseudoTag.isPseudoTag	autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() dict$/;"	f
PseudoTag.str	autoload/tagbar.vim	/^function! s:PseudoTag.str() dict$/;"	f
PurgeTimestamp	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! s:PurgeTimestamp(dir) "{{{3$/;"	f
PyCF_ONLY_AST	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^from _ast import PyCF_ONLY_AST$/;"	i
Pydoc	plugin/pydoc.vim	/^command! -nargs=1 Pydoc :call ShowPyDoc('<args>', 1)$/;"	c
PydocSearch	plugin/pydoc.vim	/^command! -nargs=*  PydocSearch :call ShowPyDoc('<args>', 0)$/;"	c
PyflakesUpdate	ftplugin/python/pyflakes.vim	/^    function s:PyflakesUpdate()$/;"	f
PyflakesUpdate	ftplugin/python/pyflakes.vim	/^  command PyflakesUpdate :call s:PyflakesUpdate()$/;"	c
Python25Test	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^class Python25Test(harness.Test):$/;"	c
Python26Tests	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^class Python26Tests(harness.Test):$/;"	c
Python27Test	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^class Python27Test(harness.Test):$/;"	c
Q	vimrc/main.vim	/^nnoremap Q @q$/;"	m
QuitIfOnlyWindow	autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow()$/;"	f
RainbowParenthesesLoadBraces	plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadBraces   cal rainbow_parentheses#load(2)$/;"	c
RainbowParenthesesLoadChevrons	plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadChevrons cal rainbow_parentheses#load(3)$/;"	c
RainbowParenthesesLoadRound	plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadRound    cal rainbow_parentheses#load(0)$/;"	c
RainbowParenthesesLoadSquare	plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesLoadSquare   cal rainbow_parentheses#load(1)$/;"	c
RainbowParenthesesToggle	plugin/rainbow_parentheses.vim	/^com! RainbowParenthesesToggle       cal rainbow_parentheses#toggle()$/;"	c
RecordInFile	autoload/vimball.vim	/^fun! s:RecordInFile(home)$/;"	f
RecordInVar	autoload/vimball.vim	/^fun! s:RecordInVar(home,cmd)$/;"	f
RedefinedFunction	ftplugin/python/pyflakes/pyflakes/messages.py	/^class RedefinedFunction(Message):$/;"	c
RedefinedWhileUnused	ftplugin/python/pyflakes/pyflakes/messages.py	/^class RedefinedWhileUnused(Message):$/;"	c
RememberPos	ftplugin/perl/omniperl.vim	/^func! s:RememberPos()$/;"	f
RemoveDelimiters	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
RemoveOverloaded	ftplugin/perl/omniperl.vim	/^func! s:RemoveOverloaded( module, super,hash )$/;"	f
RemoveSnippet	autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
RenderContent	autoload/tagbar.vim	/^function! s:RenderContent(...)$/;"	f
RenderKeepView	autoload/tagbar.vim	/^function! s:RenderKeepView(...)$/;"	f
ReplaceDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
ReplaceLeftMostDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
ReplaceRightMostDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
ResetPos	ftplugin/perl/omniperl.vim	/^func! s:ResetPos()$/;"	f
ResetSnippets	plugin/snipMate.vim	/^fun! ResetSnippets()$/;"	f
ResizeWindow	plugin/minibufexpl.vim	/^function! <SID>ResizeWindow()$/;"	f
RestoreFrameParams	bundle/tlib_vim/autoload/tlib/vim.vim	/^function! s:RestoreFrameParams() "{{{3$/;"	f
RestoreScreenState	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
RestoreSession	autoload/tagbar.vim	/^function! s:RestoreSession()$/;"	f
RestoreVals	after/ftplugin/python_pydiction.vim	/^    function! s:RestoreVals()$/;"	f
RewriteFormatString	bundle/tlib_vim/autoload/tlib/string.vim	/^function! s:RewriteFormatString(format, pattern, string) "{{{3$/;"	f
Right	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Right(...)$/;"	f
RightMostIndx	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
RmVimball	plugin/vimballPlugin.vim	/^com! -na=* -complete=dir  RmVimball							call vimball#SaveSettings()|call vimball#RmVimball(<f-args>)|call vimball#RestoreSettings()$/;"	c
RunPyflakes	ftplugin/python/pyflakes.vim	/^    function s:RunPyflakes()$/;"	f
STDOUT_ONLY	vimfiles/ftplugin/pydiction/pydiction.py	/^        STDOUT_ONLY = True$/;"	v
STDOUT_ONLY	vimfiles/ftplugin/pydiction/pydiction.py	/^STDOUT_ONLY = False$/;"	v
SaveFrameParams	bundle/tlib_vim/autoload/tlib/vim.vim	/^function! s:SaveFrameParams() "{{{3$/;"	f
SaveScreenState	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
Scope	ftplugin/python/pyflakes/pyflakes/checker.py	/^class Scope(dict):$/;"	c
SelectOutput	bundle/tlib_vim/samples/tlib/input/tlib_input_list.vim	/^function! SelectOutput(ex) "{{{3$/;"	f
SelectWord	autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
SetDefaults	ftplugin/perl/omniperl.vim	/^func! s:SetDefaults()$/;"	f
SetFoldLevel	autoload/tagbar.vim	/^function! s:SetFoldLevel(level)$/;"	f
SetFoldLevelRecursive	autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level)$/;"	f
SetScrollBind	bundle/tlib_vim/autoload/tlib/file.vim	/^function! s:SetScrollBind(world) "{{{3$/;"	f
SetUpForNewFiletype	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
SetVals	after/ftplugin/python_pydiction.vim	/^    function! s:SetVals()$/;"	f
ShouldPurge	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! s:ShouldPurge(partial_filename) "{{{3$/;"	f
ShowAvailableSnips	plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowBuffers	plugin/minibufexpl.vim	/^function! <SID>ShowBuffers(delBufNum,currBufName)$/;"	f
ShowPrototype	autoload/tagbar.vim	/^function! s:ShowPrototype()$/;"	f
ShowPyDoc	plugin/pydoc.vim	/^function! ShowPyDoc(name, type)$/;"	f
SignId	bundle/tlib_vim/autoload/tlib/signs.vim	/^function! s:SignId(item) "{{{3$/;"	f
SortCacheMostUsedFirst	ftplugin/perl/omniperl.vim	/^func! s:SortCacheMostUsedFirst( i1, i2)$/;"	f
SortCompResult	ftplugin/perl/omniperl.vim	/^func! s:SortCompResult( i1, i2)$/;"	f
SortTags	autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod)$/;"	f
StartDebug	autoload/tagbar.vim	/^function! s:StartDebug(filename)$/;"	f
StartExplorer	plugin/minibufexpl.vim	/^function! <SID>StartExplorer(sticky,delBufNum,currBufName)$/;"	f
StopDebug	autoload/tagbar.vim	/^function! s:StopDebug()$/;"	f
StopExplorer	plugin/minibufexpl.vim	/^function! <SID>StopExplorer(sticky)$/;"	f
StringIO	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^from StringIO import StringIO$/;"	i
SwapOutterMultiPartDelimsForPlaceHolders	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterMultiPartDelimsForPlaceHolders(line)$/;"	f
SwapOutterPlaceHoldersForMultiPartDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterPlaceHoldersForMultiPartDelims(line)$/;"	f
SwitchToAlternativeDelimiters	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
TBrowseOutput	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=1 -complete=command TBrowseOutput call tlib#cmd#BrowseOutput(<q-args>)$/;"	c
TBrowseScriptnames	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=0 -complete=command TBrowseScriptnames call$/;"	c
TKeyArg	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=+ TKeyArg exec tlib#arg#Key([<args>])$/;"	c
TLet	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=+ TLet if !exists(matchstr(<q-args>, '^[^=[:space:]]\\+')) | exec 'let '. <q-args> | endif$/;"	c
TLib	bundle/tlib_vim/autoload/tlib/autocmdgroup.vim	/^augroup TLib$/;"	a
TMiniBufExplorer	plugin/minibufexpl.vim	/^  command! TMiniBufExplorer  call <SID>ToggleExplorer()$/;"	c
TRequire	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=+ TRequire let s:require = [<f-args>]$/;"	c
TScratch	bundle/tlib_vim/plugin/02tlib.vim	/^command! -bar -nargs=* -bang TScratch call tlib#scratch#UseScratch({'scratch_split': '<bang>' != '!', <args>})$/;"	c
TTimeCommand	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=1 -complete=command TTimeCommand call tlib#cmd#Time(<q-args>)$/;"	c
TVarArg	bundle/tlib_vim/plugin/02tlib.vim	/^command! -nargs=+ TVarArg exec tlib#arg#Let([<args>])$/;"	c
TabComplete	after/ftplugin/python_pydiction.vim	/^    function! s:TabComplete(direction)$/;"	f
TabSpace	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
TabbedCol	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
TagbarBalloonExpr	autoload/tagbar.vim	/^function! TagbarBalloonExpr()$/;"	f
TagbarClose	nouse/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarClose	plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarDebug	nouse/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebug	plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	nouse/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarDebugEnd	plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGenerateStatusline	autoload/tagbar.vim	/^function! TagbarGenerateStatusline()$/;"	f
TagbarOpen	nouse/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpen	plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	nouse/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fc')$/;"	c
TagbarOpenAutoClose	plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fc')$/;"	c
TagbarSession	nouse/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSession	plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	nouse/tagbar.vim	/^command! -nargs=1 TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>)$/;"	c
TagbarSetFoldlevel	plugin/tagbar.vim	/^command! -nargs=1 TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>)$/;"	c
TagbarShowTag	nouse/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#OpenParents()$/;"	c
TagbarShowTag	plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#OpenParents()$/;"	c
TagbarToggle	nouse/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarToggle	plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagsByFileType	nouse/easytags.vim	/^command! -bang TagsByFileType call xolox#easytags#by_filetype(<q-bang> == '!')$/;"	c
Test	ftplugin/perl/omniperl.vim	/^func! s:Test()$/;"	f
Test	ftplugin/python/pyflakes/pyflakes/test/harness.py	/^class Test(unittest.TestCase):$/;"	c
Test	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^class Test(harness.Test):$/;"	c
Test	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^class Test(harness.Test):$/;"	c
Test	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^class Test(harness.Test):$/;"	c
TestArgs	bundle/tlib_vim/test/tlib.vim	/^function! TestArgs(...) "{{{3$/;"	f
TestArgs1	bundle/tlib_vim/test/tlib.vim	/^function! TestArgs1(...) "{{{3$/;"	f
TestArgs2	bundle/tlib_vim/test/tlib.vim	/^function! TestArgs2(...) "{{{3$/;"	f
TestArgs3	bundle/tlib_vim/test/tlib.vim	/^function! TestArgs3(...)$/;"	f
TestCase	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^from twisted.trial.unittest import TestCase$/;"	i
TestCase	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^from twisted.trial.unittest import TestCase$/;"	i
TestGetArg	bundle/tlib_vim/test/tlib.vim	/^function! TestGetArg(...) "{{{3$/;"	f
TestGetArg1	bundle/tlib_vim/test/tlib.vim	/^function! TestGetArg1(...) "{{{3$/;"	f
TestSpecialAll	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^class TestSpecialAll(harness.Test):$/;"	c
TestUnusedAssignment	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^class TestUnusedAssignment(harness.Test):$/;"	c
ToggleExplorer	plugin/minibufexpl.vim	/^function! <SID>ToggleExplorer()$/;"	f
ToggleFold	autoload/tagbar.vim	/^function! s:ToggleFold()$/;"	f
ToggleHelp	autoload/tagbar.vim	/^function! s:ToggleHelp()$/;"	f
ToggleSort	autoload/tagbar.vim	/^function! s:ToggleSort()$/;"	f
ToggleWindow	autoload/tagbar.vim	/^function! s:ToggleWindow()$/;"	f
TriggerSnippet	plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
UMiniBufExplorer	plugin/minibufexpl.vim	/^  command! UMiniBufExplorer  call <SID>AutoUpdate(-1,bufnr("%"))$/;"	c
UnBinding	ftplugin/python/pyflakes/pyflakes/checker.py	/^class UnBinding(Binding):$/;"	c
UnEsc	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
UncommentLineNormal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
UncommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
UncommentLinesNormal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
UncommentLinesSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
UndefinedExport	ftplugin/python/pyflakes/pyflakes/messages.py	/^class UndefinedExport(Message):$/;"	c
UndefinedLocal	ftplugin/python/pyflakes/pyflakes/messages.py	/^class UndefinedLocal(Message):$/;"	c
UndefinedName	ftplugin/python/pyflakes/pyflakes/messages.py	/^class UndefinedName(Message):$/;"	c
UndoHighlightLine	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! s:UndoHighlightLine() "{{{3$/;"	f
UniqValue	bundle/tlib_vim/autoload/tlib/list.vim	/^function! s:UniqValue(value) "{{{3$/;"	f
UntabbedCol	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
UnusedImport	ftplugin/python/pyflakes/pyflakes/messages.py	/^class UnusedImport(Message):$/;"	c
UnusedVariable	ftplugin/python/pyflakes/pyflakes/messages.py	/^class UnusedVariable(Message):$/;"	c
UpdateChangedSnip	autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdatePlaceholderTabStops	autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateTags	nouse/easytags.vim	/^command! -bar -bang -nargs=* -complete=file UpdateTags call xolox#easytags#update(0, <q-bang> == '!', [<f-args>])$/;"	c
UpdateVars	autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
Usage	ftplugin/perl/omniperl.pl	/^Usage : $0 [OPTIONS] MODULE$/;"	l
UseVimball	plugin/vimballPlugin.vim	/^com! -na=? -complete=dir  UseVimball						call vimball#Vimball(1,<f-args>)$/;"	c
Ve	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
VersionToNumber	nouse/easytags.vim	/^function! s:VersionToNumber(s)$/;"	f
VimballList	plugin/vimballPlugin.vim	/^com! -na=0                VimballList						call vimball#Vimball(0)$/;"	c
Vopen	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
WideMsg	ftplugin/python/pyflakes.vim	/^    function s:WideMsg(msg)$/;"	f
WriteConfig	ftplugin/perl/omniperl.vim	/^func! s:WriteConfig(file )$/;"	f
X	colors/jellybeans.vim	/^fun! s:X(group, fg, bg, attr, lcfg, lcbg)$/;"	f
ZZ	vimrc/main.vim	/^map ZZ :wqa<Cr>$/;"	m
ZoomWindow	autoload/tagbar.vim	/^function! s:ZoomWindow()$/;"	f
_	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for _ in range(1) if fu)')$/;"	i
_	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (fu for _ in range(1))')$/;"	i
_	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for _ in range(1) if fu]')$/;"	i
_	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu for _ in range(1)]')$/;"	i
_MAGIC_GLOBALS	ftplugin/python/pyflakes/pyflakes/checker.py	/^_MAGIC_GLOBALS = ['__file__', '__builtins__']$/;"	v
__author__	vimfiles/ftplugin/pydiction/pydiction.py	/^__author__ = "Ryan Kulla (rkulla AT gmail DOT com)"$/;"	v
__builtin__	ftplugin/python/pyflakes/pyflakes/checker.py	/^import __builtin__$/;"	i
__copyright__	vimfiles/ftplugin/pydiction/pydiction.py	/^__copyright__ = "Copyright (c) 2003-2009 Ryan Kulla"$/;"	v
__init__	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def __init__(self):$/;"	m	class:FunctionScope
__init__	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def __init__(self):$/;"	m	class:Scope
__init__	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def __init__(self, name, source):$/;"	m	class:Binding
__init__	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def __init__(self, name, source):$/;"	m	class:Importation
__init__	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def __init__(self, tree, filename='(none)'):$/;"	m	class:Checker
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, modname):$/;"	m	class:ImportStarUsed
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, name):$/;"	m	class:DuplicateArgument
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, name):$/;"	m	class:UndefinedExport
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, name):$/;"	m	class:UndefinedName
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, name):$/;"	m	class:UnusedImport
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, name, orig_loc):$/;"	m	class:ImportShadowedByLoopVar
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, name, orig_loc):$/;"	m	class:RedefinedFunction
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, name, orig_loc):$/;"	m	class:RedefinedWhileUnused
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, name, orig_loc):$/;"	m	class:UndefinedLocal
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, names):$/;"	m	class:LateFutureImport
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, names):$/;"	m	class:UnusedVariable
__init__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __init__(self, filename, loc, use_column=True):$/;"	m	class:Message
__repr__	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def __repr__(self):$/;"	m	class:Binding	file:
__repr__	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def __repr__(self):$/;"	m	class:Scope	file:
__str__	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def __str__(self):$/;"	m	class:Binding	file:
__str__	ftplugin/python/pyflakes/pyflakes/messages.py	/^    def __str__(self):$/;"	m	class:Message	file:
__version__	ftplugin/python/pyflakes/pyflakes/__init__.py	/^__version__ = '0.4.0'$/;"	v
__version__	vimfiles/ftplugin/pydiction/pydiction.py	/^__version__ = "1.2"$/;"	v
_ast	ftplugin/python/pyflakes/pyflakes/checker.py	/^import _ast$/;"	i
_ast	ftplugin/python/pyflakes/pyflakes/scripts/pyflakes.py	/^import _ast$/;"	i
_ast	ftplugin/python/pyflakes/pyflakes/test/harness.py	/^import _ast$/;"	i
_runDeferred	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def _runDeferred(self, deferred):$/;"	m	class:Checker
addArgs	ftplugin/python/pyflakes/pyflakes/checker.py	/^            def addArgs(arglist):$/;"	f	function:Checker.LAMBDA.runFunction
addBinding	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def addBinding(self, loc, value, reportRedef=True):$/;"	m	class:Checker
alphabet	vimrc/general_settings.vim	/^let alphabet = "abcdefghijklmnopqrstuvwxyz"$/;"	v
and	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu and False')$/;"	i
answer	vimfiles/ftplugin/pydiction/pydiction.py	/^                                    PYDICTION_DICT_BACKUP)$/;"	v
arrity	ftplugin/perl/omniperl.pl	/^sub arrity$/;"	s
assert	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; assert fu.bar')$/;"	i
ast	ftplugin/python/pyflakes.vim	/^import ast$/;"	m
ast	ftplugin/python/pyflakes/pyflakes/checker.py	/^    import ast$/;"	i
author	ftplugin/python/pyflakes/setup.py	/^    author="Phil Frost",$/;"	v
b:bar	bundle/tlib_vim/test/tlib.vim	/^let b:bar = 3$/;"	v
b:current_syntax	syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:did_pyflakes_plugin	ftplugin/python/pyflakes.vim	/^    let b:did_pyflakes_plugin = 1$/;"	v
b:did_python_init	ftplugin/python/pyflakes.vim	/^    let b:did_python_init = 0$/;"	v
b:did_python_init	ftplugin/python/pyflakes.vim	/^    let b:did_python_init = 1$/;"	v
b:showing_message	ftplugin/python/pyflakes.vim	/^let b:showing_message = 0$/;"	v
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('from baz import fu, bar', m.UnusedImport, m.UnusedImport)$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu, bar', m.UnusedImport, m.UnusedImport)$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu.bar', m.UnusedImport)$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; -fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 & fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 << fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 == fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 >> fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 ^ fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 | fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 % fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 * fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 ** fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 + fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 - fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 \/ fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 \/\/ fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu, bar] = 3', m.RedefinedWhileUnused)$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu, bar] = fu')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; assert fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; bar=fu')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; exec "print 1" in fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu, bar = 3', m.RedefinedWhileUnused)$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu, bar = fu')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar = 1')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar()')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar(stuff=fu)')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar.baz')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar[1]')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; not fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; print fu.bar[1:]')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; ~fu.bar')$/;"	i
bar	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^        self.flakes('from fu import *; bar', m.ImportStarUsed)$/;"	i
baz	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; "bar".fu.baz', m.UnusedImport)$/;"	i
baz	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar.baz')$/;"	i
binsert_r	autoload/xolox/misc/list.vim	/^function! s:binsert_r(list, low, high, value, ignorecase)$/;"	f
blacklist	ftplugin/perl/omniperl.pl	/^blacklist         : $blacklist$/;"	l
buf_utils#GotoBuf	bundle/vim-addon-mw-utils/autoload/buf_utils.vim	/^fun! buf_utils#GotoBuf(buf_identifier, opts)$/;"	f
by	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'import %r from line %r shadowed by loop variable'$/;"	i
cache_tagged_files	autoload/xolox/easytags.vim	/^function! s:cache_tagged_files(context) " {{{3$/;"	f
cache_tagged_files_in	autoload/xolox/easytags.vim	/^function! s:cache_tagged_files_in(fname, ftime, entries, context) " {{{3$/;"	f
cached_file_contents#CachedFileContents	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^function! cached_file_contents#CachedFileContents(file, func, ...) abort$/;"	f
cached_file_contents#ClearScanCache	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^fun! cached_file_contents#ClearScanCache()$/;"	f
cached_file_contents#Test	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^fun! cached_file_contents#Test()$/;"	f
canonicalize	autoload/xolox/easytags.vim	/^function! s:canonicalize(filename, context) " {{{2$/;"	f
check	ftplugin/python/pyflakes/pyflakes/scripts/pyflakes.py	/^def check(codeString, filename):$/;"	f
checkPath	ftplugin/python/pyflakes/pyflakes/scripts/pyflakes.py	/^def checkPath(filename):$/;"	f
checkPath	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^from pyflakes.scripts.pyflakes import checkPath$/;"	i
checkUnusedAssignments	ftplugin/python/pyflakes/pyflakes/checker.py	/^            def checkUnusedAssignments():$/;"	f	function:Checker.LAMBDA.runFunction
check_cfile	autoload/xolox/easytags.vim	/^function! s:check_cfile(silent, filter_tags, have_args) " {{{3$/;"	f
check_dead_scopes	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def check_dead_scopes(self):$/;"	m	class:Checker
check_filetype	autoload/xolox/easytags.vim	/^function! s:check_filetype(listing, cline)$/;"	f
check_tags	ftplugin/perl/omniperl.pl	/^sub check_tags$/;"	s
checker	ftplugin/python/pyflakes/pyflakes/scripts/pyflakes.py	/^checker = __import__('pyflakes.checker').checker$/;"	v
checker	ftplugin/python/pyflakes/pyflakes/test/harness.py	/^from pyflakes import checker$/;"	i
checker	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^from pyflakes import messages as m, checker$/;"	i
classifiers	ftplugin/python/pyflakes/setup.py	/^    classifiers=[$/;"	v
clear_message	autoload/xolox/misc/msg.vim	/^function! s:clear_message()$/;"	f
cluster	autoload/rainbow_parentheses.vim	/^func! s:cluster()$/;"	f
collectLoopVars	ftplugin/python/pyflakes/pyflakes/checker.py	/^        def collectLoopVars(n):$/;"	f	function:Checker.FOR
color	colors/jellybeans.vim	/^fun! s:color(r, g, b)$/;"	f
colors_name	colors/jellybeans.vim	/^let colors_name = "jellybeans"$/;"	v
colors_name	colors/wombat.vim	/^let colors_name = "wombat"$/;"	v
convert_value	autoload/xolox/misc/timer.vim	/^function! s:convert_value(value)$/;"	f
create_context	autoload/xolox/easytags.vim	/^function! s:create_context() " {{{2$/;"	f
ctags_cmd	ftplugin/perl/omniperl.pl	/^ctags_cmd         : $ctags_cmd$/;"	l
dd	ftplugin/python/pyflakes.vim	/^noremap <buffer><silent> dd dd:PyflakesUpdate<CR>$/;"	m
debug	ftplugin/perl/omniperl.pl	/^debug             : $debug$/;"	l
debug_print	ftplugin/perl/omniperl.pl	/^sub debug_print$/;"	s
debug_print_test_file	ftplugin/perl/omniperl.pl	/^sub debug_print_test_file$/;"	s
deferAssignment	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def deferAssignment(self, callable):$/;"	m	class:Checker
deferFunction	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def deferFunction(self, callable):$/;"	m	class:Checker
del	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; del fu', m.RedefinedWhileUnused)$/;"	i
description	ftplugin/python/pyflakes/setup.py	/^    description="passive checker of Python programs",$/;"	v
diff_keys	ftplugin/perl/omniperl.pl	/^sub diff_keys$/;"	s
division	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('from __future__ import division')$/;"	i
dw	ftplugin/python/pyflakes.vim	/^noremap <buffer><silent> dw dw:PyflakesUpdate<CR>$/;"	m
env_reload#ReloadEnv	bundle/vim-addon-mw-utils/autoload/env_reload.vim	/^fun! env_reload#ReloadEnv(bash_export_command_output)$/;"	f
escape	autoload/xolox/misc/option.vim	/^function! s:escape(s)$/;"	f
escape_tags	autoload/xolox/misc/option.vim	/^function! s:escape_tags(s)$/;"	f
evaluate	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^        def evaluate(source):$/;"	f	function:.test_multilineSyntaxError
exec	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; exec "print 1" in fu.bar')$/;"	i
extend	autoload/rainbow_parentheses.vim	/^func! s:extend()$/;"	f
extensions	ftplugin/perl/omniperl.pl	/^sub extensions$/;"	s
f	vimfiles/ftplugin/pydiction/pydiction.py	/^            f = open(PYDICTION_DICT, 'r')$/;"	v
file_lines	vimfiles/ftplugin/pydiction/pydiction.py	/^            file_lines = f.readlines()$/;"	v
filter_merge_tags	autoload/xolox/easytags.vim	/^function! s:filter_merge_tags(filter_tags, tagsfile, output, context) " {{{3$/;"	f
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	f
find_tagged_files	autoload/xolox/easytags.vim	/^function! s:find_tagged_files(entries, context) " {{{3$/;"	f
first_args_are_nicer	ftplugin/perl/omniperl.pl	/^sub first_args_are_nicer$/;"	s
flakes	ftplugin/python/pyflakes/pyflakes/test/harness.py	/^    def flakes(self, input, *expectedOutputs, **kw):$/;"	m	class:Test
foldcase_compare	autoload/xolox/easytags.vim	/^function! s:foldcase_compare(a, b)$/;"	f
for	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for _ in range(1) if fu)')$/;"	i
for	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for fu in range(1))', m.RedefinedWhileUnused)$/;"	i
for	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (fu for _ in range(1))')$/;"	i
for	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for _ in range(1) if fu]')$/;"	i
for	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for fu in range(1)]', m.RedefinedWhileUnused)$/;"	i
for	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu for _ in range(1)]')$/;"	i
from	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'import %r from line %r shadowed by loop variable'$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('from baz import fu, bar', m.UnusedImport, m.UnusedImport)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('from baz import fu; print fu')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu, bar', m.UnusedImport, m.UnusedImport)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu.bar', m.UnusedImport)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; "bar".fu.baz', m.UnusedImport)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; "meow"[::fu]')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for _ in range(1) if fu)')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for fu in range(1))', m.RedefinedWhileUnused)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (fu for _ in range(1))')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (fu,)')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; -fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 & fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 << fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 == fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 >> fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 ^ fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 1 | fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 % fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 * fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 ** fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 + fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 - fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 \/ fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; 3 \/\/ fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for _ in range(1) if fu]')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for fu in range(1)]', m.RedefinedWhileUnused)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu for _ in range(1)]')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu, bar] = 3', m.RedefinedWhileUnused)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu, bar] = fu')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu]')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; `fu`')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; assert fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; bar=fu')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; del fu', m.RedefinedWhileUnused)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; exec "print 1" in fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu += fu')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu = 3', m.RedefinedWhileUnused)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu = fu')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu and False')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu or False')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu, bar = 3', m.RedefinedWhileUnused)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu, bar = fu')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar = 1')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar()')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar(stuff=fu)')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar.baz')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar[1]')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; lambda fu: fu', m.UnusedImport)$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; lambda: fu')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; n=0; n+=fu')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; not fu.bar')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; print fu')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; print fu.bar[1:]')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; {1:fu}')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; {fu:None}')$/;"	i
fu	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; ~fu.bar')$/;"	i
funcref#Call	bundle/vim-addon-mw-utils/autoload/funcref.vim	/^function! funcref#Call(...)$/;"	f
funcref#Function	bundle/vim-addon-mw-utils/autoload/funcref.vim	/^function! funcref#Function(name,...)$/;"	f
g:OmniPerl_Blacklist	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Blacklist = 'DynaLoader,Exporter,AutoLoader'$/;"	v
g:OmniPerl_Handle_Unknown_As	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Handle_Unknown_As = ''$/;"	v
g:OmniPerl_Loaded	ftplugin/perl/omniperl.vim	/^let g:OmniPerl_Loaded  = 1$/;"	v
g:OmniPerl_Man_Cmd	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Man_Cmd = ''$/;"	v
g:OmniPerl_Max_Cache	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Max_Cache = 20$/;"	v
g:OmniPerl_Module_Conf	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Module_Conf = $/;"	v
g:OmniPerl_Modulelist_File	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Modulelist_File = ''$/;"	v
g:OmniPerl_Pod_Cmd	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Pod_Cmd = ''$/;"	v
g:OmniPerl_Pum_Context	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Pum_Context = 'module,line'$/;"	v
g:OmniPerl_Pum_Max_Wordlength	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Pum_Max_Wordlength = 20$/;"	v
g:OmniPerl_Sanitytests_Passed	ftplugin/perl/omniperl_config.vim	/^    let g:OmniPerl_Sanitytests_Passed = 1$/;"	v
g:bar	bundle/tlib_vim/test/tlib.vim	/^let g:bar = 2$/;"	v
g:did_ft	plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:easytags_by_filetype	nouse/easytags.vim	/^  let g:easytags_by_filetype = ''$/;"	v
g:easytags_events	nouse/easytags.vim	/^  let g:easytags_events = []$/;"	v
g:easytags_file	nouse/easytags.vim	/^    let g:easytags_file = '~\/.vimtags'$/;"	v
g:easytags_file	nouse/easytags.vim	/^    let g:easytags_file = '~\\_vimtags'$/;"	v
g:easytags_ignored_filetypes	nouse/easytags.vim	/^  let g:easytags_ignored_filetypes = '^tex$'$/;"	v
g:easytags_ignored_syntax_groups	nouse/easytags.vim	/^  let g:easytags_ignored_syntax_groups = '.*String.*,.*Comment.*,cIncluded'$/;"	v
g:easytags_python_script	nouse/easytags.vim	/^  let g:easytags_python_script = expand('<sfile>:p:h') . '\/..\/misc\/easytags\/highlight.py'$/;"	v
g:foo	bundle/tlib_vim/test/tlib.vim	/^let g:foo = 1$/;"	v
g:indent_guides_auto_colors	colors/jellybeans.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:loaded_easytags	nouse/easytags.vim	/^let g:loaded_easytags = 1$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_tagbar	autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_vimball	autoload/vimball.vim	/^let g:loaded_vimball = "v33"$/;"	v
g:loaded_vimballPlugin	plugin/vimballPlugin.vim	/^let g:loaded_vimballPlugin = "v33"$/;"	v
g:miniBufExplBufList	plugin/minibufexpl.vim	/^  let g:miniBufExplBufList = ''$/;"	v
g:miniBufExplCheckDupeBufs	plugin/minibufexpl.vim	/^  let g:miniBufExplCheckDupeBufs = 1$/;"	v
g:miniBufExplCloseOnSelect	plugin/minibufexpl.vim	/^  let g:miniBufExplCloseOnSelect = 0$/;"	v
g:miniBufExplDoneClickSave	plugin/minibufexpl.vim	/^    let  g:miniBufExplDoneClickSave = 1$/;"	v
g:miniBufExplForceDisplay	plugin/minibufexpl.vim	/^  let g:miniBufExplForceDisplay = 0$/;"	v
g:miniBufExplForceSyntaxEnable	plugin/minibufexpl.vim	/^  let g:miniBufExplForceSyntaxEnable = 0$/;"	v
g:miniBufExplInAutoUpdate	plugin/minibufexpl.vim	/^  let g:miniBufExplInAutoUpdate = 0$/;"	v
g:miniBufExplMapCTabSwitchBufs	plugin/minibufexpl.vim	/^  let g:miniBufExplMapCTabSwitchBufs = 0$/;"	v
g:miniBufExplMapCTabSwitchWindows	plugin/minibufexpl.vim	/^  let g:miniBufExplMapCTabSwitchWindows = 0$/;"	v
g:miniBufExplMapWindowNav	plugin/minibufexpl.vim	/^  let g:miniBufExplMapWindowNav = 0$/;"	v
g:miniBufExplMapWindowNavArrows	plugin/minibufexpl.vim	/^  let g:miniBufExplMapWindowNavArrows = 0$/;"	v
g:miniBufExplMapWindowNavVim	plugin/minibufexpl.vim	/^  let g:miniBufExplMapWindowNavVim = 0$/;"	v
g:miniBufExplMaxHeight	plugin/minibufexpl.vim	/^  let g:miniBufExplMaxHeight = 0$/;"	v
g:miniBufExplMaxSize	plugin/minibufexpl.vim	/^  let g:miniBufExplMaxSize = g:miniBufExplMaxHeight$/;"	v
g:miniBufExplMinHeight	plugin/minibufexpl.vim	/^  let g:miniBufExplMinHeight = 1$/;"	v
g:miniBufExplMinSize	plugin/minibufexpl.vim	/^  let g:miniBufExplMinSize = g:miniBufExplMinHeight$/;"	v
g:miniBufExplModSelTarget	plugin/minibufexpl.vim	/^  let g:miniBufExplModSelTarget = 0$/;"	v
g:miniBufExplShowBufNumbers	plugin/minibufexpl.vim	/^  let g:miniBufExplShowBufNumbers = 1$/;"	v
g:miniBufExplSortBy	plugin/minibufexpl.vim	/^  let g:miniBufExplSortBy = "number"$/;"	v
g:miniBufExplSplitBelow	plugin/minibufexpl.vim	/^  let g:miniBufExplSplitBelow = &splitbelow$/;"	v
g:miniBufExplSplitToEdge	plugin/minibufexpl.vim	/^  let g:miniBufExplSplitToEdge = 1$/;"	v
g:miniBufExplTabWrap	plugin/minibufexpl.vim	/^  let g:miniBufExplTabWrap = 0$/;"	v
g:miniBufExplUseSingleClick	plugin/minibufexpl.vim	/^  let g:miniBufExplUseSingleClick = 0$/;"	v
g:miniBufExplVSplit	plugin/minibufexpl.vim	/^  let g:miniBufExplVSplit = 0$/;"	v
g:miniBufExplorerAutoUpdate	plugin/minibufexpl.vim	/^  let g:miniBufExplorerAutoUpdate = 0$/;"	v
g:miniBufExplorerDebugLevel	plugin/minibufexpl.vim	/^  let g:miniBufExplorerDebugLevel = 1$/;"	v
g:miniBufExplorerDebugMode	plugin/minibufexpl.vim	/^  let g:miniBufExplorerDebugMode = 3$/;"	v
g:miniBufExplorerDebugOutput	plugin/minibufexpl.vim	/^  let g:miniBufExplorerDebugOutput = ''$/;"	v
g:miniBufExplorerMoreThanOne	plugin/minibufexpl.vim	/^  let g:miniBufExplorerMoreThanOne = 2$/;"	v
g:miniBufExplorerMoreThanOne	vimrc/plugin.vim	/^let g:miniBufExplorerMoreThanOne=1$/;"	v
g:modTrackingList	plugin/minibufexpl.vim	/^let g:modTrackingList = []$/;"	v
g:netrw_cygwin	autoload/vimball.vim	/^    let g:netrw_cygwin= 0$/;"	v
g:netrw_cygwin	autoload/vimball.vim	/^    let g:netrw_cygwin= 1$/;"	v
g:netrw_cygwin	autoload/vimball.vim	/^   let g:netrw_cygwin= 0$/;"	v
g:pep8_map	ftplugin/python/pep8.vim	/^    let g:pep8_map='<F5>'$/;"	v
g:pydiction_location	vimrc/languages.vim	/^let g:pydiction_location = '\/Users\/scale\/.vim\/vimfiles\/ftplugin\/pydiction\/complete-dict'$/;"	v
g:pyflakes_builtins	ftplugin/python/pyflakes.vim	/^    let g:pyflakes_builtins = []$/;"	v
g:pyflakes_use_quickfix	ftplugin/python/pyflakes.vim	/^    let g:pyflakes_use_quickfix = 1$/;"	v
g:snips_author	vimrc/general_settings.vim	/^let g:snips_author = "Nolen Royalty"$/;"	v
g:statusLineText	plugin/minibufexpl.vim	/^  let g:statusLineText = "-MiniBufExplorer-"$/;"	v
g:tagbar_autoclose	nouse/tagbar.vim	/^    let g:tagbar_autoclose = 0$/;"	v
g:tagbar_autoclose	plugin/tagbar.vim	/^    let g:tagbar_autoclose = 0$/;"	v
g:tagbar_autofocus	nouse/tagbar.vim	/^    let g:tagbar_autofocus = 0$/;"	v
g:tagbar_autofocus	plugin/tagbar.vim	/^    let g:tagbar_autofocus = 0$/;"	v
g:tagbar_autoshowtag	nouse/tagbar.vim	/^    let g:tagbar_autoshowtag = 0$/;"	v
g:tagbar_autoshowtag	plugin/tagbar.vim	/^    let g:tagbar_autoshowtag = 0$/;"	v
g:tagbar_compact	nouse/tagbar.vim	/^    let g:tagbar_compact = 0$/;"	v
g:tagbar_compact	plugin/tagbar.vim	/^    let g:tagbar_compact = 0$/;"	v
g:tagbar_compact	vimrc/plugin.vim	/^let g:tagbar_compact = 1$/;"	v
g:tagbar_ctags_bin	autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = '\/opt\/local\/bin\/ctags'$/;"	v
g:tagbar_ctags_bin	autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = '\/usr\/local\/bin\/ctags'$/;"	v
g:tagbar_ctags_bin	autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'ctags'$/;"	v
g:tagbar_ctags_bin	autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'ctags-exuberant'$/;"	v
g:tagbar_ctags_bin	autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'ctags.exe'$/;"	v
g:tagbar_ctags_bin	autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'exctags'$/;"	v
g:tagbar_ctags_bin	autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'exuberant-ctags'$/;"	v
g:tagbar_ctags_bin	autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'tags'$/;"	v
g:tagbar_ctags_bin	autoload/tagbar.vim	/^    let g:tagbar_ctags_bin = expand(g:tagbar_ctags_bin)$/;"	v
g:tagbar_expand	nouse/tagbar.vim	/^    let g:tagbar_expand = 0$/;"	v
g:tagbar_expand	plugin/tagbar.vim	/^    let g:tagbar_expand = 0$/;"	v
g:tagbar_foldlevel	nouse/tagbar.vim	/^    let g:tagbar_foldlevel = 99$/;"	v
g:tagbar_foldlevel	plugin/tagbar.vim	/^    let g:tagbar_foldlevel = 99$/;"	v
g:tagbar_iconchars	nouse/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	nouse/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_iconchars	plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_left	nouse/tagbar.vim	/^    let g:tagbar_left = 0$/;"	v
g:tagbar_left	plugin/tagbar.vim	/^    let g:tagbar_left = 0$/;"	v
g:tagbar_singleclick	nouse/tagbar.vim	/^    let g:tagbar_singleclick = 0$/;"	v
g:tagbar_singleclick	plugin/tagbar.vim	/^    let g:tagbar_singleclick = 0$/;"	v
g:tagbar_sort	nouse/tagbar.vim	/^    let g:tagbar_sort = 1$/;"	v
g:tagbar_sort	plugin/tagbar.vim	/^    let g:tagbar_sort = 1$/;"	v
g:tagbar_systemenc	nouse/tagbar.vim	/^    let g:tagbar_systemenc = &encoding$/;"	v
g:tagbar_systemenc	plugin/tagbar.vim	/^    let g:tagbar_systemenc = &encoding$/;"	v
g:tagbar_updateonsave_maxlines	nouse/tagbar.vim	/^    let g:tagbar_updateonsave_maxlines = 5000$/;"	v
g:tagbar_updateonsave_maxlines	plugin/tagbar.vim	/^    let g:tagbar_updateonsave_maxlines = 5000$/;"	v
g:tagbar_width	nouse/tagbar.vim	/^    let g:tagbar_width = 40$/;"	v
g:tagbar_width	plugin/tagbar.vim	/^    let g:tagbar_width = 40$/;"	v
g:timer_enabled	autoload/xolox/misc/timer.vim	/^  let g:timer_enabled = 0$/;"	v
g:timer_verbosity	autoload/xolox/misc/timer.vim	/^  let g:timer_verbosity = 1$/;"	v
g:tlib#cmd#last_output	bundle/tlib_vim/autoload/tlib/cmd.vim	/^let g:tlib#cmd#last_output = []$/;"	v
g:tlib#date#dayshift	bundle/tlib_vim/autoload/tlib/date.vim	/^let g:tlib#date#dayshift = 60 * 60 * 24$/;"	v
g:tlib#input#use_popup	bundle/tlib_vim/autoload/tlib/input.vim	/^    let g:tlib#input#use_popup = has('menu') && (has('gui_gtk') || has('gui_gtk2') || has('gui_win32'))$/;"	v
g:tlib#vim#simalt_maximize	bundle/tlib_vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#simalt_maximize = 'x'   "{{{2$/;"	v
g:tlib#vim#simalt_restore	bundle/tlib_vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#simalt_restore = 'r'   "{{{2$/;"	v
g:tlib#vim#use_vimtweak	bundle/tlib_vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#use_vimtweak = 0   "{{{2$/;"	v
g:tlib#vim#use_wmctrl	bundle/tlib_vim/autoload/tlib/vim.vim	/^        let g:tlib#vim#use_wmctrl = executable('wmctrl')  "{{{2$/;"	v
g:vimball_mkdir	autoload/vimball.vim	/^   let g:vimball_mkdir= "makedir"$/;"	v
g:vimball_mkdir	autoload/vimball.vim	/^   let g:vimball_mkdir= "mkdir"$/;"	v
g:vimball_mkdir	autoload/vimball.vim	/^   let g:vimball_mkdir= g:netrw_local_mkdir$/;"	v
g:xolox#easytags#version	autoload/xolox/easytags.vim	/^let g:xolox#easytags#version = '2.8.1'$/;"	v
g:xolox#misc#os#version	autoload/xolox/misc/os.vim	/^let g:xolox#misc#os#version = '0.1'$/;"	v
g:xolox_message_buffer	autoload/xolox/misc/msg.vim	/^  let g:xolox_message_buffer = 100$/;"	v
g:xolox_messages	autoload/xolox/misc/msg.vim	/^  let g:xolox_messages = []$/;"	v
get_exporter_infos	ftplugin/perl/omniperl.pl	/^sub get_exporter_infos$/;"	s
get_submodules	vimfiles/ftplugin/pydiction/pydiction.py	/^def get_submodules(module_name, submodules):$/;"	f
get_yesno	vimfiles/ftplugin/pydiction/pydiction.py	/^def get_yesno(msg="[Y\/n]?"):$/;"	f
glob#Glob	bundle/vim-addon-mw-utils/autoload/glob.vim	/^fun! glob#Glob(pattern, ...)$/;"	f
grey_color	colors/jellybeans.vim	/^fun! s:grey_color(n)$/;"	f
grey_level	colors/jellybeans.vim	/^fun! s:grey_level(n)$/;"	f
grey_number	colors/jellybeans.vim	/^fun! s:grey_number(x)$/;"	f
handleChildren	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def handleChildren(self, tree):$/;"	m	class:Checker
handleNode	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def handleNode(self, node, parent):$/;"	m	class:Checker
handle_error	autoload/xolox/misc/open.vim	/^function! s:handle_error(cmd, output)$/;"	f
harness	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^from pyflakes.test import harness$/;"	i
harness	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^from pyflakes.test import harness$/;"	i
harness	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^from pyflakes.test import harness$/;"	i
highlight_with_python	autoload/xolox/easytags.vim	/^function! s:highlight_with_python(syntax_group, tagkind) " {{{2$/;"	f
if	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for _ in range(1) if fu)')$/;"	i
if	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for _ in range(1) if fu]')$/;"	i
ignore	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def ignore(self, node):$/;"	m	class:Checker
importStarred	ftplugin/python/pyflakes/pyflakes/checker.py	/^    importStarred = False       # set to True when import * is found$/;"	v	class:Scope
in	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for _ in range(1) if fu)')$/;"	i
in	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for fu in range(1))', m.RedefinedWhileUnused)$/;"	i
in	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (fu for _ in range(1))')$/;"	i
in	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for _ in range(1) if fu]')$/;"	i
in	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for fu in range(1)]', m.RedefinedWhileUnused)$/;"	i
in	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu for _ in range(1)]')$/;"	i
in	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; exec "print 1" in fu.bar')$/;"	i
isDocstring	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def isDocstring(self, node):$/;"	m	class:Checker
iter_child_nodes	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def iter_child_nodes(node, astcls=_ast.AST):$/;"	f
iter_child_nodes	ftplugin/python/pyflakes/pyflakes/checker.py	/^    iter_child_nodes = ast.iter_child_nodes$/;"	v
join_entry	autoload/xolox/easytags.vim	/^function! s:join_entry(value)$/;"	f
known_files.get	autoload/tagbar.vim	/^function! s:known_files.get(fname) dict$/;"	f
known_files.getCurrent	autoload/tagbar.vim	/^function! s:known_files.getCurrent() dict$/;"	f
known_files.has	autoload/tagbar.vim	/^function! s:known_files.has(fname) dict$/;"	f
known_files.put	autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) dict$/;"	f
known_files.rm	autoload/tagbar.vim	/^function! s:known_files.rm(fname) dict$/;"	f
known_files.setCurrent	autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) dict$/;"	f
lambda	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; lambda fu: fu', m.UnusedImport)$/;"	i
lambda	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; lambda: fu')$/;"	i
license	ftplugin/python/pyflakes/setup.py	/^    license="MIT",$/;"	v
line	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'import %r from line %r shadowed by loop variable'$/;"	i
loaded_minibufexplorer	plugin/minibufexpl.vim	/^let loaded_minibufexplorer = 1$/;"	v
loaded_nerd_comments	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_snips	plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_tlib	bundle/tlib_vim/plugin/02tlib.vim	/^let loaded_tlib = 44$/;"	v
loaded_tlib_TestChild_autoload	bundle/tlib_vim/autoload/tlib/TestChild.vim	/^let loaded_tlib_TestChild_autoload = 1$/;"	v
loaded_tlib_Test_autoload	bundle/tlib_vim/autoload/tlib/Test.vim	/^let loaded_tlib_Test_autoload = 1$/;"	v
loaded_tlib_arg_autoload	bundle/tlib_vim/autoload/tlib/arg.vim	/^let loaded_tlib_arg_autoload = 1$/;"	v
loaded_tlib_char_autoload	bundle/tlib_vim/autoload/tlib/char.vim	/^let loaded_tlib_char_autoload = 1$/;"	v
loaded_tlib_cmd_autoload	bundle/tlib_vim/autoload/tlib/cmd.vim	/^let loaded_tlib_cmd_autoload = 1$/;"	v
loaded_tlib_comments_autoload	bundle/tlib_vim/autoload/tlib/comments.vim	/^let loaded_tlib_comments_autoload = 1$/;"	v
loaded_tlib_dir_autoload	bundle/tlib_vim/autoload/tlib/dir.vim	/^let loaded_tlib_dir_autoload = 1$/;"	v
loaded_tlib_eval_autoload	bundle/tlib_vim/autoload/tlib/eval.vim	/^let loaded_tlib_eval_autoload = 1$/;"	v
loaded_tlib_file_autoload	bundle/tlib_vim/autoload/tlib/file.vim	/^let loaded_tlib_file_autoload = 1$/;"	v
loaded_tlib_hook_autoload	bundle/tlib_vim/autoload/tlib/hook.vim	/^let loaded_tlib_hook_autoload = 1$/;"	v
loaded_tlib_object_autoload	bundle/tlib_vim/autoload/tlib/Object.vim	/^let loaded_tlib_object_autoload = 1$/;"	v
loaded_tlib_progressbar_autoload	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let loaded_tlib_progressbar_autoload = 1$/;"	v
loaded_tlib_rx_autoload	bundle/tlib_vim/autoload/tlib/rx.vim	/^let loaded_tlib_rx_autoload = 1$/;"	v
loaded_tlib_scratch_autoload	bundle/tlib_vim/autoload/tlib/scratch.vim	/^let loaded_tlib_scratch_autoload = 1$/;"	v
loaded_tlib_string_autoload	bundle/tlib_vim/autoload/tlib/string.vim	/^let loaded_tlib_string_autoload = 1$/;"	v
loaded_tlib_syntax_autoload	bundle/tlib_vim/autoload/tlib/syntax.vim	/^let loaded_tlib_syntax_autoload = 1$/;"	v
loaded_tlib_tab_autoload	bundle/tlib_vim/autoload/tlib/tab.vim	/^let loaded_tlib_tab_autoload = 1$/;"	v
loaded_tlib_tag_autoload	bundle/tlib_vim/autoload/tlib/tag.vim	/^let loaded_tlib_tag_autoload = 1$/;"	v
loaded_tlib_time_autoload	bundle/tlib_vim/autoload/tlib/time.vim	/^let loaded_tlib_time_autoload = 1$/;"	v
loaded_tlib_var_autoload	bundle/tlib_vim/autoload/tlib/var.vim	/^let loaded_tlib_var_autoload = 1$/;"	v
loaded_tlib_win_autoload	bundle/tlib_vim/autoload/tlib/win.vim	/^let loaded_tlib_win_autoload = 1$/;"	v
loop	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'import %r from line %r shadowed by loop variable'$/;"	i
m	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^from pyflakes import messages as m$/;"	i
m	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^from pyflakes import messages as m$/;"	i
m	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^from pyflakes import messages as m, checker$/;"	i
main	ftplugin/perl/omniperl.pl	/^sub main$/;"	s
main	ftplugin/python/pyflakes/pyflakes/scripts/pyflakes.py	/^def main():$/;"	f
main	vimfiles/ftplugin/pydiction/pydiction.py	/^def main(write_to):$/;"	f
maintainer	ftplugin/python/pyflakes/setup.py	/^    maintainer="Moe Aboulkheir",$/;"	v
maintainer_email	ftplugin/python/pyflakes/setup.py	/^    maintainer_email="moe@divmod.com",$/;"	v
make_entry	ftplugin/perl/omniperl.pl	/^sub make_entry$/;"	s
man_cmd	ftplugin/perl/omniperl.pl	/^man_cmd           : $man_cmd$/;"	l
mapleader	vimrc/main.vim	/^let mapleader = ";"$/;"	v
member	ftplugin/perl/omniperl.pl	/^sub member$/;"	s
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = "'from %s import *' used; unable to detect undefined names"$/;"	v	class:ImportStarUsed
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = "local variable %r (defined in enclosing scope on line %r) referenced before assignment"$/;"	v	class:UndefinedLocal
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = '%r imported but unused'$/;"	v	class:UnusedImport
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = ''$/;"	v	class:Message
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'duplicate argument %r in function definition'$/;"	v	class:DuplicateArgument
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'future import(s) %r after other statements'$/;"	v	class:LateFutureImport
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'import %r from line %r shadowed by loop variable'$/;"	v	class:ImportShadowedByLoopVar
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'local variable %r is assigned to but never used'$/;"	v	class:UnusedVariable
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'redefinition of function %r from line %r'$/;"	v	class:RedefinedFunction
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'redefinition of unused %r from line %r'$/;"	v	class:RedefinedWhileUnused
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'undefined name %r in __all__'$/;"	v	class:UndefinedExport
message	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'undefined name %r'$/;"	v	class:UndefinedName
message_args	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message_args = ()$/;"	v	class:Message
messages	ftplugin/python/pyflakes/pyflakes/checker.py	/^from pyflakes import messages$/;"	i
my_import	vimfiles/ftplugin/pydiction/pydiction.py	/^def my_import(name):$/;"	f
n	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; n=0; n+=fu')$/;"	i
n	vimfiles/ftplugin/pydiction/pydiction.py	/^        write_to.write('\\n--- from %s import %s ---\\n' % $/;"	i
n	vimfiles/ftplugin/pydiction/pydiction.py	/^    write_to.write('\\n--- from %s import * ---\\n' % module_name)$/;"	i
n	vimfiles/ftplugin/pydiction/pydiction.py	/^    write_to.write('\\n--- import %s ---\\n' % module_name)$/;"	i
name	ftplugin/python/pyflakes/setup.py	/^    name="pyflakes",$/;"	v
names	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def names(self):$/;"	m	class:ExportBinding
nodeDepth	ftplugin/python/pyflakes/pyflakes/checker.py	/^    nodeDepth = 0$/;"	v	class:Checker
not	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; not fu.bar')$/;"	i
or	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu or False')$/;"	i
os	ftplugin/python/pyflakes/pyflakes/checker.py	/^import os.path$/;"	i
os	ftplugin/python/pyflakes/pyflakes/scripts/pyflakes.py	/^import os$/;"	i
os	vimfiles/ftplugin/pydiction/pydiction.py	/^import os$/;"	i
os.path	ftplugin/python/pyflakes.vim	/^import os.path$/;"	m
packages	ftplugin/python/pyflakes/setup.py	/^    packages=["pyflakes", "pyflakes.scripts", "pyflakes.test"],$/;"	v
path	ftplugin/python/pyflakes/pyflakes/checker.py	/^import os.path$/;"	i
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#fnameescape	autoload/pathogen.vim	/^function! pathogen#fnameescape(string) " {{{1$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_findfile	autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
pod_cmd	ftplugin/perl/omniperl.pl	/^pod_cmd           : $pod_cmd$/;"	l
popScope	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def popScope(self):$/;"	m	class:Checker
prep_cmdline	autoload/xolox/easytags.vim	/^function! s:prep_cmdline(cfile, tagsfile, firstrun, arguments, context) " {{{3$/;"	f
print	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('from baz import fu; print fu')$/;"	i
print	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; print fu')$/;"	i
print	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; print fu.bar[1:]')$/;"	i
prototype.AssessName	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.AssessName(world, name) dict "{{{3$/;"	f
prototype.BuildTableList	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.BuildTableList() dict "{{{3$/;"	f
prototype.CleanFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.CleanFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.CleanFilter(filter) dict "{{{3$/;"	f
prototype.ClearAllMarks	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.ClearAllMarks() dict "{{{3$/;"	f
prototype.CloseScratch	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.CloseScratch(...) dict "{{{3$/;"	f
prototype.CurrentItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.CurrentItem() dict "{{{3$/;"	f
prototype.DisplayFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.DisplayFilter(filter) dict "{{{3$/;"	f
prototype.DisplayFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayFilter() dict "{{{3$/;"	f
prototype.DisplayHelp	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayHelp() dict "{{{3$/;"	f
prototype.DisplayList	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayList(query, ...) dict "{{{3$/;"	f
prototype.DisplayListMark	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.DisplayListMark(x, y, mark) dict "{{{3$/;"	f
prototype.Dummy	bundle/tlib_vim/autoload/tlib/Test.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Dummy	bundle/tlib_vim/autoload/tlib/TestChild.vim	/^function! s:prototype.Dummy() dict "{{{3$/;"	f
prototype.Extend	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.Extend(dictionary) dict "{{{3$/;"	f
prototype.FilterIsEmpty	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FilterIsEmpty() dict "{{{3$/;"	f
prototype.FilterRxPrefix	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FilterRxPrefix	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FilterRxPrefix() dict "{{{3$/;"	f
prototype.FollowCursor	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FollowCursor() dict "{{{3$/;"	f
prototype.FormatArgs	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FormatArgs(format_string, arg) dict "{{{3$/;"	f
prototype.FormatFilename	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FormatFilename(file) dict "{{{3$/;"	f
prototype.FormatHelp	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FormatHelp(...) dict "{{{3$/;"	f
prototype.FormatName	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.FormatName(cache, format, value) dict "{{{3$/;"	f
prototype.GetBaseIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx(idx) dict "{{{3$/;"	f
prototype.GetBaseIdx0	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetBaseIdx0(idx) dict "{{{3$/;"	f
prototype.GetBaseItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetBaseItem(idx) dict "{{{3$/;"	f
prototype.GetItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetItem(idx) dict "{{{3$/;"	f
prototype.GetLineIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetLineIdx(lnum) dict "{{{3$/;"	f
prototype.GetListIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetListIdx(baseidx) dict "{{{3$/;"	f
prototype.GetResize	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetResize(size) dict "{{{3$/;"	f
prototype.GetRx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetRx(filter) dict "{{{3$/;"	f
prototype.GetRx0	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetRx0(...) dict "{{{3$/;"	f
prototype.GetSelectedItems	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.GetSelectedItems(current) dict "{{{3$/;"	f
prototype.Help	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Help	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.Help(world) dict "{{{3$/;"	f
prototype.Highlight_filename	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Highlight_filename() dict "{{{3$/;"	f
prototype.Inherit	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.Inherit(object) dict "{{{3$/;"	f
prototype.Init	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.Init	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.Init	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.Init(world) dict "{{{3$/;"	f
prototype.Initialize	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Initialize() dict "{{{3$/;"	f
prototype.IsA	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.IsA(class) dict "{{{3$/;"	f
prototype.IsRelated	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.IsRelated(object) dict "{{{3$/;"	f
prototype.IsValidFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.IsValidFilter() dict "{{{3$/;"	f
prototype.Leave	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Leave() dict "{{{3$/;"	f
prototype.MarkCurrent	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.MarkCurrent(y) dict "{{{3$/;"	f
prototype.Match	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.Match(world, text) dict "{{{3$/;"	f
prototype.MatchBaseIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.MatchBaseIdx(idx) dict "{{{3$/;"	f
prototype.New	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.New(...) dict "{{{3$/;"	f
prototype.PopFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.PopFilter() dict "{{{3$/;"	f
prototype.PushFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.PushFrontFilter(world, char) dict "{{{3$/;"	f
prototype.PushFrontFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.PushFrontFilter(char) dict "{{{3$/;"	f
prototype.ReduceFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.ReduceFilter() dict "{{{3$/;"	f
prototype.ReduceFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.ReduceFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.ReduceFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.ReduceFrontFilter(world) dict "{{{3$/;"	f
prototype.Reset	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Reset(...) dict "{{{3$/;"	f
prototype.ResetSelected	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.ResetSelected() dict "{{{3$/;"	f
prototype.Resize	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Resize(hsize, vsize) dict "{{{3$/;"	f
prototype.RespondTo	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.RespondTo(name) dict "{{{3$/;"	f
prototype.RestoreOrigin	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.RestoreOrigin(...) dict "{{{3$/;"	f
prototype.Retrieve	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Retrieve(anyway) dict "{{{3$/;"	f
prototype.ScrollToOffset	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.ScrollToOffset() dict "{{{3$/;"	f
prototype.SelectItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SelectItem(mode, index) dict "{{{3$/;"	f
prototype.SetBaseItem	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetBaseItem(idx, item) dict "{{{3$/;"	f
prototype.SetFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetFilter() dict "{{{3$/;"	f
prototype.SetFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! s:prototype.SetFrontFilter(world, pattern) dict "{{{3$/;"	f
prototype.SetFrontFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetFrontFilter(pattern) dict "{{{3$/;"	f
prototype.SetInitialFilter	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetInitialFilter(filter) dict "{{{3$/;"	f
prototype.SetMatchMode	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetMatchMode(match_mode) dict "{{{3$/;"	f
prototype.SetOffset	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetOffset() dict "{{{3$/;"	f
prototype.SetOrigin	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetOrigin(...) dict "{{{3$/;"	f
prototype.SetPrefIdx	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetPrefIdx() dict "{{{3$/;"	f
prototype.SetStatusline	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SetStatusline(query) dict "{{{3$/;"	f
prototype.Set_display_format	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Set_display_format(value) dict "{{{3$/;"	f
prototype.Set_highlight_filename	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.Set_highlight_filename() dict "{{{3$/;"	f
prototype.Super	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! s:prototype.Super(method, arglist) dict "{{{3$/;"	f
prototype.SwitchWindow	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.SwitchWindow(where) dict "{{{3$/;"	f
prototype.UseInputListScratch	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.UseInputListScratch() dict "{{{3$/;"	f
prototype.UseScratch	bundle/tlib_vim/autoload/tlib/World.vim	/^function! s:prototype.UseScratch() dict "{{{3$/;"	f
pushClassScope	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def pushClassScope(self):$/;"	m	class:Checker
pushFunctionScope	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def pushFunctionScope(self):$/;"	m	class:Checker
python_available	autoload/xolox/easytags.vim	/^function! s:python_available() " {{{2$/;"	f
r	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'import %r from line %r shadowed by loop variable'$/;"	i
rainbow_parentheses#activate	autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#activate()$/;"	f
rainbow_parentheses#clear	autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#clear()$/;"	f
rainbow_parentheses#load	autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#load(...)$/;"	f
rainbow_parentheses#toggle	autoload/rainbow_parentheses.vim	/^func! rainbow_parentheses#toggle()$/;"	f
range	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for _ in range(1) if fu)')$/;"	i
range	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (1 for fu in range(1))', m.RedefinedWhileUnused)$/;"	i
range	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; (fu for _ in range(1))')$/;"	i
range	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for _ in range(1) if fu]')$/;"	i
range	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [1 for fu in range(1)]', m.RedefinedWhileUnused)$/;"	i
range	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; [fu for _ in range(1)]')$/;"	i
re	ftplugin/python/pyflakes.vim	/^import re$/;"	m
re_custom	ftplugin/perl/omniperl.pl	/^re_custom         : $re_custom$/;"	l
read_test_file	ftplugin/perl/omniperl.pl	/^sub read_test_file$/;"	s
recursive	ftplugin/perl/omniperl.pl	/^recursive         : $recursive$/;"	l
remove_duplicates	vimfiles/ftplugin/pydiction/pydiction.py	/^def remove_duplicates(seq, keep=()):$/;"	f
report	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def report(self, messageClass, *args, **kwargs):$/;"	m	class:Checker
resolve	autoload/xolox/easytags.vim	/^function! s:resolve(filename) " {{{2$/;"	f
rgb	colors/jellybeans.vim	/^fun! s:rgb(rgb)$/;"	f
rgb_color	colors/jellybeans.vim	/^fun! s:rgb_color(x, y, z)$/;"	f
rgb_level	colors/jellybeans.vim	/^fun! s:rgb_level(n)$/;"	f
rgb_number	colors/jellybeans.vim	/^fun! s:rgb_number(x)$/;"	f
runFunction	ftplugin/python/pyflakes/pyflakes/checker.py	/^        def runFunction():$/;"	f	function:Checker.LAMBDA
run_ctags	autoload/xolox/easytags.vim	/^function! s:run_ctags(starttime, cfile, tagsfile, firstrun, cmdline) " {{{3$/;"	f
s	bundle/tlib_vim/test/tlib.vim	/^    let s = printf('%sfoo%sbar%s', c, c, c)$/;"	v
s	vimfiles/ftplugin/pydiction/pydiction.py	/^                    if line.find('--- import %s ' % module_name) != -1:$/;"	i
s	vimfiles/ftplugin/pydiction/pydiction.py	/^        write_to.write('\\n--- from %s import %s ---\\n' % $/;"	i
s	vimfiles/ftplugin/pydiction/pydiction.py	/^    write_to.write('\\n--- import %s ---\\n' % module_name)$/;"	i
s:BaseTag	autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:ERROR	autoload/vimball.vim	/^ let s:ERROR   = 2$/;"	v
s:FileInfo	autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:Help	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^let s:Help = s:prototype.Help$/;"	v
s:Help	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^let s:Help = s:prototype.Help$/;"	v
s:KindheaderTag	autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:MRUList	plugin/minibufexpl.vim	/^let s:MRUList = range(1, bufnr('$'))$/;"	v
s:NERDFileNameEscape	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NormalTag	autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:PseudoTag	autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:USAGE	autoload/vimball.vim	/^ let s:USAGE   = 0$/;"	v
s:WARNING	autoload/vimball.vim	/^ let s:WARNING = 1$/;"	v
s:access_symbols	autoload/tagbar.vim	/^let s:access_symbols = {$/;"	v
s:aliases	autoload/xolox/easytags.vim	/^let s:aliases = {}$/;"	v
s:autocommands_done	autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:available_modules	ftplugin/perl/omniperl.vim	/^let s:available_modules = []$/;"	v
s:bar	bundle/tlib_vim/test/tlib.vim	/^let s:bar = 4$/;"	v
s:base	bundle/tlib_vim/autoload/tlib/signs.vim	/^let s:base = 2327$/;"	v
s:bmru	bundle/tlib_vim/autoload/tlib/buffer.vim	/^let s:bmru = []$/;"	v
s:c	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:c['cache_dir'] = get(s:c, 'cache_dir', expand('$HOME').'\/.vim-cache')$/;"	v
s:c	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:c['scanned_files'] = get(s:c, 'scanned_files', {})$/;"	v
s:c	bundle/vim-addon-mw-utils/autoload/glob.vim	/^let s:c['glob_cache'] = get(s:c, 'glob_cache', {})$/;"	v
s:c	bundle/vim-addon-mw-utils/autoload/glob.vim	/^let s:c['regex_ignore_directory'] = '\\<\\%([_.]darcs\\|\\.git\\|.svn\\|.hg\\|.cvs\\|.bzr\\)\\>'$/;"	v
s:canonical_aliases	autoload/xolox/easytags.vim	/^let s:canonical_aliases = {}$/;"	v
s:checked_ctags	autoload/tagbar.vim	/^let s:checked_ctags     = 0$/;"	v
s:clickmap	plugin/minibufexpl.vim	/^  let s:clickmap = ':if bufname("%") == "-MiniBufExplorer-" <bar> call <SID>MBEClick() <bar> endif <CR>'$/;"	v
s:cmd1	bundle/tlib_vim/autoload/tlib/vcs.vim	/^        let s:cmd1 = printf(g:tlib#vcs#check, s:cmd)$/;"	v
s:colorpairs	autoload/rainbow_parentheses.vim	/^	let s:colorpairs = [$/;"	v
s:colorpairs	autoload/rainbow_parentheses.vim	/^	let s:colorpairs = g:rbpt_colorpairs$/;"	v
s:comp_cache	ftplugin/perl/omniperl.vim	/^let s:comp_cache        = {}         "cached infos about modules, hashes provided by s:perl_script_name$/;"	v
s:complete_infos	ftplugin/perl/omniperl.vim	/^let s:complete_infos    = {'buffer' : {}, 'ident' : "" ,'start' : -1 , 'kinds'  : "" ,'module' : "",'special' : ""}$/;"	v
s:config_file	ftplugin/perl/omniperl.vim	/^let s:config_file      = s:my_directory.s:dirsep.'omniperl_config.vim'$/;"	v
s:cpo_save	autoload/xolox/easytags.vim	/^let s:cpo_save = &cpo$/;"	v
s:ctags_filetypes	autoload/xolox/easytags.vim	/^let s:ctags_filetypes = []$/;"	v
s:current_complete	ftplugin/perl/omniperl.vim	/^let s:current_complete  = {}         "info about what kind of completion we are doing$/;"	v
s:cursor_pos	ftplugin/perl/omniperl.vim	/^let s:cursor_pos = []$/;"	v
s:debug	autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debugIndex	plugin/minibufexpl.vim	/^let s:debugIndex = 0 $/;"	v
s:debug_file	autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:define_cache_file	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:define_cache_file = "let this_dir = s:c['cache_dir'].'\/cached-file-conents' | let cache_file = expand(this_dir.'\/'.substitute(string([func_as_string, a:file]),'[[\\\\]{}:\/\\\\,''\\"# ]\\\\+','_','g'))"$/;"	v
s:delimiterMap	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:delimiterMap = {$/;"	v
s:did_snip_helper	ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:dir_stack	bundle/tlib_vim/autoload/tlib/dir.vim	/^let s:dir_stack = []$/;"	v
s:dirsep	ftplugin/perl/omniperl.vim	/^let s:dirsep           = tmp =~ '\\' ? '\\' : '\/'$/;"	v
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:enoimpl	autoload/xolox/misc/open.vim	/^  let s:enoimpl = "open.vim %s: %s() hasn't been implemented for your platform! If you have suggestions, please contact peter@peterodding.com."$/;"	v
s:format	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:format = []$/;"	v
s:fullscreen	bundle/tlib_vim/autoload/tlib/vim.vim	/^let s:fullscreen = 0$/;"	v
s:glob_cache	bundle/vim-addon-mw-utils/autoload/glob.vim	/^let s:glob_cache = s:c['glob_cache']$/;"	v
s:handlers	autoload/xolox/misc/open.vim	/^  let s:handlers = ['gnome-open', 'kde-open', 'exo-open', 'xdg-open']$/;"	v
s:has_reltime	autoload/xolox/misc/timer.vim	/^let s:has_reltime = has('reltime')$/;"	v
s:ic	syntax/tagbar.vim	/^    let s:ic = '\\' . s:ic$/;"	v
s:ic	syntax/tagbar.vim	/^let s:ic = g:tagbar_iconchars[0]$/;"	v
s:icon_closed	autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:id_counter	bundle/tlib_vim/autoload/tlib/Object.vim	/^let s:id_counter = 0$/;"	v
s:io	syntax/tagbar.vim	/^    let s:io = '\\' . s:io$/;"	v
s:io	syntax/tagbar.vim	/^let s:io = g:tagbar_iconchars[1]$/;"	v
s:keepcpo	autoload/vimball.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugin/vimballPlugin.vim	/^let s:keepcpo              = &cpo$/;"	v
s:known_files	autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:known_tagfiles	autoload/xolox/easytags.vim	/^  let s:known_tagfiles = {}$/;"	v
s:last_highlight_tline	autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:laststatus	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:laststatus = []$/;"	v
s:lenSpaceStr	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:list	autoload/xolox/misc/list.vim	/^  let s:list = ['a', 'B', 'e']$/;"	v
s:low_color	colors/jellybeans.vim	/^  let s:low_color = 0$/;"	v
s:low_color	colors/jellybeans.vim	/^  let s:low_color = 1$/;"	v
s:m	plugin/minibufexpl.vim	/^    let  s:m = ':nnoremap <silent> <LEFTMOUSE> <LEFTMOUSE>'$/;"	v
s:m	plugin/minibufexpl.vim	/^    let  s:m = s:m . s:clickmap$/;"	v
s:m	plugin/minibufexpl.vim	/^    let  s:m = s:m . substitute(substitute(maparg('<LEFTMOUSE>', 'n'), '|', '<bar>', 'g'), '\\c^<LEFTMOUSE>', '', '')$/;"	v
s:manuals	ftplugin/perl/omniperl.vim	/^let s:manuals           = {}         "cached manuals\/pods$/;"	v
s:max	autoload/rainbow_parentheses.vim	/^	let s:max = g:rbpt_max$/;"	v
s:max	autoload/rainbow_parentheses.vim	/^	let s:max = len(s:colorpairs)$/;"	v
s:max	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:max = []$/;"	v
s:maxTabWidth	plugin/minibufexpl.vim	/^let s:maxTabWidth = 0 $/;"	v
s:msg	nouse/easytags.vim	/^      let s:msg .= " On Ubuntu & Debian you can install Exuberant Ctags by"$/;"	v
s:msg	nouse/easytags.vim	/^      let s:msg .= " Please download & install Exuberant Ctags from http:\/\/ctags.sf.net"$/;"	v
s:msg	nouse/easytags.vim	/^      let s:msg .= " installing the package named `exuberant-ctags':"$/;"	v
s:msg	nouse/easytags.vim	/^      let s:msg .= " sudo apt-get install exuberant-ctags"$/;"	v
s:msg	nouse/easytags.vim	/^    let s:msg .= " or newer is required while you have version %s installed!"$/;"	v
s:msg	nouse/easytags.vim	/^    let s:msg = "easytags.vim %s: Plug-in not loaded because Exuberant Ctags 5.5"$/;"	v
s:msg	nouse/easytags.vim	/^    let s:msg = "easytags.vim %s: Plug-in not loaded because Exuberant Ctags isn't installed!"$/;"	v
s:my_directory	ftplugin/perl/omniperl.vim	/^let s:my_directory      = expand("<sfile>:h")$/;"	v
s:pattern	syntax/tagbar.vim	/^let s:pattern = '[' . s:ic . s:io . ']\\([-+# ]\\)\\@='$/;"	v
s:pattern	syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . '] \\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . '][-+# ]\\)\\@<=[^*]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:perl_script_name	ftplugin/perl/omniperl.vim	/^let s:perl_script_name  = 'omniperl.pl'   "scriptname of the 'main-worker', parses the perl pods and does some other stuff$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^let s:prototype = tlib#Object#New({'_class': ['Filter_cnf'], 'name': 'cnf'}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^let s:prototype.highlight = g:tlib_inputlist_higroup$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_cnfd'], 'name': 'cnfd'}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^let s:prototype.highlight = g:tlib_inputlist_higroup$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^let s:prototype = tlib#Filter_cnf#New({'_class': ['Filter_fuzzy'], 'name': 'fuzzy'}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^let s:prototype.highlight = g:tlib_inputlist_higroup$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Object.vim	/^let s:prototype  = {'_class': ['object'], '_super': [], '_id': 0} "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/Test.vim	/^let s:prototype = tlib#Object#New({'_class': ['Test']}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/TestChild.vim	/^let s:prototype = tlib#Test#New({'_class': ['TestChild']}) "{{{2$/;"	v
s:prototype	bundle/tlib_vim/autoload/tlib/World.vim	/^let s:prototype = tlib#Object#New({$/;"	v
s:re_module	ftplugin/perl/omniperl.vim	/^let s:re_module= '\\u\\%(\\w\\|:\\)*'$/;"	v
s:register	bundle/tlib_vim/autoload/tlib/signs.vim	/^let s:register = {}$/;"	v
s:restoreframecmd	bundle/tlib_vim/autoload/tlib/vim.vim	/^let s:restoreframecmd = ''$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/autocmdgroup.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/comments.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/map.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/normal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/notify.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/paragraph.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/signs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/syntax.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/autoload/tlib/textobjects.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/tlib_vim/plugin/02tlib.vim	/^let s:save_cpo = &cpo$/;"	v
s:scanned_files	bundle/vim-addon-mw-utils/autoload/cached_file_contents.vim	/^let s:scanned_files = s:c['scanned_files']$/;"	v
s:snippets	plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:spaceStr	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:state	bundle/tlib_vim/samples/tlib/input/tlib_input_list.vim	/^let s:state = {$/;"	v
s:statusline	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:statusline = []$/;"	v
s:tagged_files	autoload/xolox/easytags.vim	/^  let s:tagged_files = {}$/;"	v
s:tagkinds	autoload/xolox/easytags.vim	/^let s:tagkinds = {}$/;"	v
s:termBlack	colors/jellybeans.vim	/^    let s:termBlack = "Black"$/;"	v
s:termBlack	colors/jellybeans.vim	/^    let s:termBlack = "Grey"$/;"	v
s:timestamp	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:timestamp = -1$/;"	v
s:type_init_done	autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:types	autoload/rainbow_parentheses.vim	/^let s:types = [['(',')'],['\\[','\\]'],['{','}'],['<','>']]$/;"	v
s:units	autoload/xolox/misc/timer.vim	/^let s:units = [['day', 60 * 60 * 24], ['hour', 60 * 60], ['minute', 60], ['second', 1]]$/;"	v
s:value	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:value = []$/;"	v
s:version	autoload/xolox/misc/open.vim	/^  let s:version = '1.1'$/;"	v
s:vim_filetypes	autoload/xolox/easytags.vim	/^let s:vim_filetypes = []$/;"	v
s:width	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^let s:width = []$/;"	v
s:window_expanded	autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:windows_compatible	autoload/xolox/misc/path.vim	/^let s:windows_compatible = has('win32') || has('win64')$/;"	v
save_by_filetype	autoload/xolox/easytags.vim	/^function! s:save_by_filetype(filter_tags, headers, entries, context)$/;"	f
scope	ftplugin/python/pyflakes/pyflakes/checker.py	/^    def scope(self):$/;"	m	class:Checker
scope	ftplugin/python/pyflakes/pyflakes/checker.py	/^    scope = property(scope)$/;"	v	class:Checker
scripts	ftplugin/python/pyflakes/setup.py	/^    scripts=["bin\/pyflakes"],$/;"	v
setup	ftplugin/python/pyflakes/setup.py	/^from distutils.core import setup$/;"	i
shadowed	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'import %r from line %r shadowed by loop variable'$/;"	i
show_message	autoload/xolox/misc/msg.vim	/^function! s:show_message(hlgroup, args)$/;"	f
shutil	vimfiles/ftplugin/pydiction/pydiction.py	/^import shutil$/;"	i
skip	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        skip = "Python 2.6 required for class decorator tests."$/;"	v	class:Python26Tests
skip	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^        skip = "Python 2.5 required for if-else and with tests"$/;"	v	class:Python25Test
skip	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^        skip = "Python 2.7 required for dict\/set comprehension tests"$/;"	v	class:Python27Test
snipMate#expandSnip	autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
stuff	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^        self.flakes('import fu; fu.bar(stuff=fu)')$/;"	i
sys	ftplugin/python/pyflakes.vim	/^import sys$/;"	m
sys	ftplugin/python/pyflakes/pyflakes/scripts/pyflakes.py	/^import sys$/;"	i
sys	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^import sys$/;"	i
sys	vimfiles/ftplugin/pydiction/pydiction.py	/^import sys$/;"	i
tagbar#CloseWindow	autoload/tagbar.vim	/^function! tagbar#CloseWindow()$/;"	f
tagbar#OpenParents	autoload/tagbar.vim	/^function! tagbar#OpenParents()$/;"	f
tagbar#OpenWindow	autoload/tagbar.vim	/^function! tagbar#OpenWindow(...)$/;"	f
tagbar#RestoreSession	autoload/tagbar.vim	/^function! tagbar#RestoreSession()$/;"	f
tagbar#SetFoldLevel	autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(...)$/;"	f
tagbar#StartDebug	autoload/tagbar.vim	/^function! tagbar#StartDebug(...)$/;"	f
tagbar#StopDebug	autoload/tagbar.vim	/^function! tagbar#StopDebug()$/;"	f
tagbar#ToggleWindow	autoload/tagbar.vim	/^function! tagbar#ToggleWindow()$/;"	f
tagbar#autoopen	autoload/tagbar.vim	/^function! tagbar#autoopen()$/;"	f
test	autoload/xolox/misc/list.vim	/^  function! s:test(value, expected)$/;"	f
test	bundle/tlib_vim/test/tlib.vim	/^let test = tlib#Test#New()$/;"	v
test	ftplugin/perl/omniperl.pl	/^test              : $test$/;"	l
test1	bundle/tlib_vim/test/tlib.vim	/^let test1 = tlib#Test#New()$/;"	v
test_aliasedImport	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_aliasedImport(self):$/;"	m	class:Test
test_assignInForLoop	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_assignInForLoop(self):$/;"	m	class:TestUnusedAssignment
test_assignInListComprehension	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_assignInListComprehension(self):$/;"	m	class:TestUnusedAssignment
test_assignRHSFirst	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_assignRHSFirst(self):$/;"	m	class:Test
test_assignToGlobal	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_assignToGlobal(self):$/;"	m	class:TestUnusedAssignment
test_assignToMember	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_assignToMember(self):$/;"	m	class:TestUnusedAssignment
test_assignmentInsideLoop	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_assignmentInsideLoop(self):$/;"	m	class:TestUnusedAssignment
test_badNestedClass	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_badNestedClass(self):$/;"	m	class:Test
test_builtins	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_builtins(self):$/;"	m	class:Test
test_checkPathNonExisting	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^    def test_checkPathNonExisting(self):$/;"	m	class:CheckTests
test_classFunctionDecorator	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_classFunctionDecorator(self):$/;"	m	class:Test
test_classNameDefinedPreviously	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_classNameDefinedPreviously(self):$/;"	m	class:Test
test_classNameUndefinedInClassBody	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_classNameUndefinedInClassBody(self):$/;"	m	class:Test
test_closedOver	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_closedOver(self):$/;"	m	class:TestUnusedAssignment
test_comparison	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_comparison(self):$/;"	m	class:Test
test_containment	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_containment(self):$/;"	m	class:Test
test_definedAsStarArgs	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_definedAsStarArgs(self):$/;"	m	class:Test
test_definedByGlobal	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_definedByGlobal(self):$/;"	m	class:Test
test_definedInGenExp	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_definedInGenExp(self):$/;"	m	class:Test
test_definedInListComp	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_definedInListComp(self):$/;"	m	class:Test
test_del	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_del(self):$/;"	m	class:Test
test_delGlobal	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_delGlobal(self):$/;"	m	class:Test
test_delUndefined	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_delUndefined(self):$/;"	m	class:Test
test_dictComprehension	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_dictComprehension(self):$/;"	m	class:Python27Test
test_differentSubmoduleImport	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_differentSubmoduleImport(self):$/;"	m	class:Test
test_doubleClosedOver	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_doubleClosedOver(self):$/;"	m	class:TestUnusedAssignment
test_doubleNestingReportsClosestName	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_doubleNestingReportsClosestName(self):$/;"	m	class:Test
test_duplicateArgs	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_duplicateArgs(self):$/;"	m	class:Test
test_duplicateSubmoduleImport	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_duplicateSubmoduleImport(self):$/;"	m	class:Test
test_ellipsis	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_ellipsis(self):$/;"	m	class:Test
test_eofSyntaxError	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^    def test_eofSyntaxError(self):$/;"	f
test_extendedSlice	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_extendedSlice(self):$/;"	m	class:Test
test_functionDecorator	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_functionDecorator(self):$/;"	m	class:Test
test_functionNamesAreBoundNow	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_functionNamesAreBoundNow(self):$/;"	m	class:Test
test_functionsNeedGlobalScope	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_functionsNeedGlobalScope(self):$/;"	m	class:Test
test_functionsRunLater	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_functionsRunLater(self):$/;"	m	class:Test
test_futureImport	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_futureImport(self):$/;"	m	class:Test
test_futureImportFirst	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_futureImportFirst(self):$/;"	m	class:Test
test_generatorExpression	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_generatorExpression(self):$/;"	m	class:TestUnusedAssignment
test_globalFromNestedScope	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_globalFromNestedScope(self):$/;"	m	class:Test
test_globalImportStar	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_globalImportStar(self):$/;"	m	class:Test
test_globalInGlobalScope	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_globalInGlobalScope(self):$/;"	m	class:Test
test_identity	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_identity(self):$/;"	m	class:Test
test_ifexp	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_ifexp(self):$/;"	m	class:Python25Test
test_ignoreNonImportRedefinitions	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_ignoreNonImportRedefinitions(self):$/;"	m	class:Test
test_ignoredInClass	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_ignoredInClass(self):$/;"	m	class:TestSpecialAll
test_ignoredInFunction	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_ignoredInFunction(self):$/;"	m	class:TestSpecialAll
test_importStar	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_importStar(self):$/;"	m	class:Test
test_importedInClass	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_importedInClass(self):$/;"	m	class:Test
test_importingForImportError	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_importingForImportError(self):$/;"	m	class:Test
test_impossibleContext	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_impossibleContext(self):$/;"	m	class:NameTests
test_intermediateClassScopeIgnored	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_intermediateClassScopeIgnored(self):$/;"	m	class:Test
test_laterRedefinedGlobalFromNestedScope	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_laterRedefinedGlobalFromNestedScope(self):$/;"	m	class:Test
test_laterRedefinedGlobalFromNestedScope2	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_laterRedefinedGlobalFromNestedScope2(self):$/;"	m	class:Test
test_laterRedefinedGlobalFromNestedScope3	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_laterRedefinedGlobalFromNestedScope3(self):$/;"	m	class:Test
test_listUnpacking	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_listUnpacking(self):$/;"	m	class:TestUnusedAssignment
test_localImportStar	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_localImportStar(self):$/;"	m	class:Test
test_localReferencedBeforeAssignment	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_localReferencedBeforeAssignment(self):$/;"	m	class:Test
test_loopControl	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_loopControl(self):$/;"	m	class:Test
test_magicGlobalsBuiltins	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_magicGlobalsBuiltins(self):$/;"	m	class:Test
test_magicGlobalsFile	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_magicGlobalsFile(self):$/;"	m	class:Test
test_magicGlobalsName	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_magicGlobalsName(self):$/;"	m	class:Test
test_magicGlobalsPath	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_magicGlobalsPath(self):$/;"	m	class:Test
test_methodsDontUseClassScope	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_methodsDontUseClassScope(self):$/;"	m	class:Test
test_misencodedFile	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^    def test_misencodedFile(self):$/;"	f
test_missingTrailingNewline	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^    def test_missingTrailingNewline(self):$/;"	m	class:CheckTests
test_multilineSyntaxError	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^    def test_multilineSyntaxError(self):$/;"	m	class:CheckTests
test_nestedClass	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_nestedClass(self):$/;"	m	class:Test
test_nestedClassAndFunctionScope	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_nestedClassAndFunctionScope(self):$/;"	m	class:Test
test_nestedFunctionsNestScope	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_nestedFunctionsNestScope(self):$/;"	m	class:Test
test_newAssignment	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_newAssignment(self):$/;"	m	class:Test
test_nonDefaultFollowsDefaultSyntaxError	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^    def test_nonDefaultFollowsDefaultSyntaxError(self):$/;"	f
test_nonGlobalDoesNotRedefine	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_nonGlobalDoesNotRedefine(self):$/;"	m	class:Test
test_nonKeywordAfterKeywordSyntaxError	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^    def test_nonKeywordAfterKeywordSyntaxError(self):$/;"	f
test_notUsedInNestedScope	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_notUsedInNestedScope(self):$/;"	m	class:Test
test_packageImport	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_packageImport(self):$/;"	m	class:Test
test_permissionDenied	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^    def test_permissionDenied(self):$/;"	f
test_redefinedByClass	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedByClass(self):$/;"	m	class:Test
test_redefinedByExcept	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedByExcept(self):$/;"	m	class:Test
test_redefinedByFor	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedByFor(self):$/;"	m	class:Test
test_redefinedByFunction	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedByFunction(self):$/;"	m	class:Test
test_redefinedByGenExp	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedByGenExp(self):$/;"	m	class:TestSpecialAll
test_redefinedByListComp	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedByListComp(self):$/;"	m	class:Test
test_redefinedBySubclass	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedBySubclass(self):$/;"	m	class:Test
test_redefinedClassFunction	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_redefinedClassFunction(self):$/;"	m	class:Test
test_redefinedFunction	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_redefinedFunction(self):$/;"	m	class:Test
test_redefinedInClass	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedInClass(self):$/;"	m	class:Test
test_redefinedInNestedFunction	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedInNestedFunction(self):$/;"	m	class:Test
test_redefinedWhileUnused	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_redefinedWhileUnused(self):$/;"	m	class:Test
test_run	ftplugin/perl/omniperl.pl	/^sub test_run$/;"	s
test_setComprehensionAndLiteral	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_setComprehensionAndLiteral(self):$/;"	m	class:Python27Test
test_shadowedByFor	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_shadowedByFor(self):$/;"	m	class:Test
test_shadowedByForDeep	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_shadowedByForDeep(self):$/;"	m	class:Test
test_shadowedByLambda	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_shadowedByLambda(self):$/;"	m	class:Test
test_shadowedByParameter	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_shadowedByParameter(self):$/;"	m	class:Test
test_tryingMultipleImports	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_tryingMultipleImports(self):$/;"	m	class:Test
test_tupleUnpacking	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_tupleUnpacking(self):$/;"	m	class:TestUnusedAssignment
test_unaryPlus	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_unaryPlus(self):$/;"	m	class:Test
test_unboundExported	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_unboundExported(self):$/;"	m	class:TestSpecialAll
test_undefined	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_undefined(self):$/;"	m	class:Test
test_undefinedBaseClass	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_undefinedBaseClass(self):$/;"	m	class:Test
test_unpackedParameter	ftplugin/python/pyflakes/pyflakes/test/test_undefined_names.py	/^    def test_unpackedParameter(self):$/;"	m	class:Test
test_unrecognizable	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_unrecognizable(self):$/;"	m	class:TestSpecialAll
test_unusedImport	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_unusedImport(self):$/;"	m	class:Test
test_unusedInNestedScope	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_unusedInNestedScope(self):$/;"	m	class:Test
test_unusedPackageImport	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_unusedPackageImport(self):$/;"	m	class:Test
test_unusedVariable	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_unusedVariable(self):$/;"	m	class:TestUnusedAssignment
test_usedAsClassDecorator	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedAsClassDecorator(self):$/;"	m	class:Python26Tests
test_usedAsDecorator	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedAsDecorator(self):$/;"	m	class:TestSpecialAll
test_usedImport	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedImport(self):$/;"	m	class:Test
test_usedInAssert	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInAssert(self):$/;"	m	class:Test
test_usedInAssignment	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInAssignment(self):$/;"	m	class:Test
test_usedInAttributeAssign	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInAttributeAssign(self):$/;"	m	class:Test
test_usedInBackquote	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInBackquote(self):$/;"	m	class:Test
test_usedInCall	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInCall(self):$/;"	m	class:Test
test_usedInClass	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInClass(self):$/;"	m	class:Test
test_usedInClassBase	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInClassBase(self):$/;"	m	class:Test
test_usedInDict	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInDict(self):$/;"	m	class:Test
test_usedInElifConditional	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInElifConditional(self):$/;"	m	class:Test
test_usedInElse	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInElse(self):$/;"	m	class:Test
test_usedInExcept	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInExcept(self):$/;"	m	class:Test
test_usedInExec	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInExec(self):$/;"	m	class:Test
test_usedInFor	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInFor(self):$/;"	m	class:Test
test_usedInForElse	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInForElse(self):$/;"	m	class:Test
test_usedInFunction	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInFunction(self):$/;"	m	class:Test
test_usedInGenExp	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInGenExp(self):$/;"	m	class:TestSpecialAll
test_usedInGetattr	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInGetattr(self):$/;"	m	class:Test
test_usedInGlobal	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInGlobal(self):$/;"	m	class:Test
test_usedInIfBody	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInIfBody(self):$/;"	m	class:Test
test_usedInIfConditional	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInIfConditional(self):$/;"	m	class:Test
test_usedInKeywordArg	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInKeywordArg(self):$/;"	m	class:Test
test_usedInLambda	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInLambda(self):$/;"	m	class:Test
test_usedInList	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInList(self):$/;"	m	class:Test
test_usedInListComp	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInListComp(self):$/;"	m	class:Test
test_usedInLogic	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInLogic(self):$/;"	m	class:Test
test_usedInOperators	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInOperators(self):$/;"	m	class:Test
test_usedInParameterDefault	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInParameterDefault(self):$/;"	m	class:Test
test_usedInRaise	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInRaise(self):$/;"	m	class:Test
test_usedInReturn	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInReturn(self):$/;"	m	class:Test
test_usedInSlice	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInSlice(self):$/;"	m	class:Test
test_usedInSliceObj	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInSliceObj(self):$/;"	m	class:Test
test_usedInSubscript	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInSubscript(self):$/;"	m	class:Test
test_usedInTry	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInTry(self):$/;"	m	class:Test
test_usedInTryFinally	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInTryFinally(self):$/;"	m	class:Test
test_usedInTuple	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInTuple(self):$/;"	m	class:Test
test_usedInWhile	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInWhile(self):$/;"	m	class:Test
test_usedInYield	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_usedInYield(self):$/;"	m	class:Test
test_warningSuppressed	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^    def test_warningSuppressed(self):$/;"	m	class:TestSpecialAll
test_withStatementAttributeName	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementAttributeName(self):$/;"	m	class:Python25Test
test_withStatementComplicatedTarget	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementComplicatedTarget(self):$/;"	m	class:Python25Test
test_withStatementListNames	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementListNames(self):$/;"	m	class:Python25Test
test_withStatementNameDefinedInBody	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementNameDefinedInBody(self):$/;"	m	class:Python25Test
test_withStatementNoNames	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementNoNames(self):$/;"	m	class:Python25Test
test_withStatementSingleName	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementSingleName(self):$/;"	m	class:Python25Test
test_withStatementSingleNameRedefined	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementSingleNameRedefined(self):$/;"	m	class:Python25Test
test_withStatementSingleNameUndefined	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementSingleNameUndefined(self):$/;"	m	class:Python25Test
test_withStatementSubscript	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementSubscript(self):$/;"	m	class:Python25Test
test_withStatementSubscriptUndefined	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementSubscriptUndefined(self):$/;"	m	class:Python25Test
test_withStatementTupleNames	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementTupleNames(self):$/;"	m	class:Python25Test
test_withStatementTupleNamesRedefined	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementTupleNamesRedefined(self):$/;"	m	class:Python25Test
test_withStatementTupleNamesUndefined	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementTupleNamesUndefined(self):$/;"	m	class:Python25Test
test_withStatementUndefinedInExpression	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementUndefinedInExpression(self):$/;"	m	class:Python25Test
test_withStatementUndefinedInside	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^    def test_withStatementUndefinedInside(self):$/;"	m	class:Python25Test
testc	bundle/tlib_vim/test/tlib.vim	/^let testc = tlib#TestChild#New()$/;"	v
testworld	bundle/tlib_vim/test/tlib.vim	/^let testworld = tlib#World#New()$/;"	v
textwrap	ftplugin/python/pyflakes/pyflakes/test/harness.py	/^import textwrap$/;"	i
tiny_cmd#Get	bundle/vim-addon-mw-utils/autoload/tiny_cmd.vim	/^fun! tiny_cmd#Get(nr)$/;"	f
tiny_cmd#Pop	bundle/vim-addon-mw-utils/autoload/tiny_cmd.vim	/^fun! tiny_cmd#Pop(nr)$/;"	f
tiny_cmd#Put	bundle/vim-addon-mw-utils/autoload/tiny_cmd.vim	/^fun! tiny_cmd#Put(a)$/;"	f
tlib#Filter_cnf#New	bundle/tlib_vim/autoload/tlib/Filter_cnf.vim	/^function! tlib#Filter_cnf#New(...) "{{{3$/;"	f
tlib#Filter_cnfd#New	bundle/tlib_vim/autoload/tlib/Filter_cnfd.vim	/^function! tlib#Filter_cnfd#New(...) "{{{3$/;"	f
tlib#Filter_fuzzy#New	bundle/tlib_vim/autoload/tlib/Filter_fuzzy.vim	/^function! tlib#Filter_fuzzy#New(...) "{{{3$/;"	f
tlib#Object#Methods	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! tlib#Object#Methods(object, ...) "{{{3$/;"	f
tlib#Object#New	bundle/tlib_vim/autoload/tlib/Object.vim	/^function! tlib#Object#New(...) "{{{3$/;"	f
tlib#Test#New	bundle/tlib_vim/autoload/tlib/Test.vim	/^function! tlib#Test#New(...) "{{{3$/;"	f
tlib#TestChild#New	bundle/tlib_vim/autoload/tlib/TestChild.vim	/^function! tlib#TestChild#New(...) "{{{3$/;"	f
tlib#World#New	bundle/tlib_vim/autoload/tlib/World.vim	/^function! tlib#World#New(...)$/;"	f
tlib#agent#AND	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#AND(world, selected) "{{{3$/;"	f
tlib#agent#Copy	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Copy(world, selected) "{{{3$/;"	f
tlib#agent#CopyItems	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#CopyItems(world, selected) "{{{3$/;"	f
tlib#agent#Cut	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Cut(world, selected) "{{{3$/;"	f
tlib#agent#Debug	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Debug(world, selected) "{{{3$/;"	f
tlib#agent#DeleteItems	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#DeleteItems(world, selected) "{{{3$/;"	f
tlib#agent#DoAtLine	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#DoAtLine(world, selected) "{{{3$/;"	f
tlib#agent#Down	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Down(world, selected, ...) "{{{3$/;"	f
tlib#agent#DownN	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#DownN(world, selected) "{{{3$/;"	f
tlib#agent#EditFile	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFile(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInSplit	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInTab	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInTab(world, selected) "{{{3$/;"	f
tlib#agent#EditFileInVSplit	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditFileInVSplit(world, selected) "{{{3$/;"	f
tlib#agent#EditItem	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditItem(world, selected) "{{{3$/;"	f
tlib#agent#EditReturnValue	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#EditReturnValue(world, rv) "{{{3$/;"	f
tlib#agent#Exit	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Exit(world, selected) "{{{3$/;"	f
tlib#agent#GotoLine	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#GotoLine(world, selected) "{{{3$/;"	f
tlib#agent#Help	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Help(world, selected) "{{{3$/;"	f
tlib#agent#Input	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Input(world, selected) "{{{3$/;"	f
tlib#agent#NewItem	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#NewItem(world, selected) "{{{3$/;"	f
tlib#agent#OR	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#OR(world, selected) "{{{3$/;"	f
tlib#agent#PageDown	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#PageDown(world, selected) "{{{3$/;"	f
tlib#agent#PageUp	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#PageUp(world, selected) "{{{3$/;"	f
tlib#agent#Paste	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Paste(world, selected) "{{{3$/;"	f
tlib#agent#PopFilter	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#PopFilter(world, selected) "{{{3$/;"	f
tlib#agent#PreviewLine	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#PreviewLine(world, selected) "{{{3$/;"	f
tlib#agent#ReduceFilter	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ReduceFilter(world, selected) "{{{3$/;"	f
tlib#agent#Reset	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Reset(world, selected) "{{{3$/;"	f
tlib#agent#Select	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Select(world, selected) "{{{3$/;"	f
tlib#agent#SelectAll	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#SelectAll(world, selected) "{{{3$/;"	f
tlib#agent#SelectDown	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#SelectDown(world, selected) "{{{3$/;"	f
tlib#agent#SelectUp	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#SelectUp(world, selected) "{{{3$/;"	f
tlib#agent#ShiftLeft	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftLeft(world, selected) "{{{3$/;"	f
tlib#agent#ShiftRight	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ShiftRight(world, selected) "{{{3$/;"	f
tlib#agent#ShowInfo	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ShowInfo(world, selected)$/;"	f
tlib#agent#Suspend	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Suspend(world, selected) "{{{3$/;"	f
tlib#agent#SuspendToParentWindow	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#SuspendToParentWindow(world, selected) "{{{3$/;"	f
tlib#agent#ToggleScrollbind	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleScrollbind(world, selected) "{{{3$/;"	f
tlib#agent#ToggleStickyList	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ToggleStickyList(world, selected) "{{{3$/;"	f
tlib#agent#Up	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Up(world, selected, ...) "{{{3$/;"	f
tlib#agent#UpN	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#UpN(world, selected) "{{{3$/;"	f
tlib#agent#ViewFile	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#ViewFile(world, selected) "{{{3$/;"	f
tlib#agent#Wildcard	bundle/tlib_vim/autoload/tlib/agent.vim	/^function! tlib#agent#Wildcard(world, selected) "{{{3$/;"	f
tlib#arg#Ex	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#Ex(arg, ...) "{{{3$/;"	f
tlib#arg#Get	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#Get(n, var, ...) "{{{3$/;"	f
tlib#arg#Key	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#Key(list, ...) "{{{3$/;"	f
tlib#arg#Let	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#Let(list, ...) "{{{3$/;"	f
tlib#arg#StringAsKeyArgs	bundle/tlib_vim/autoload/tlib/arg.vim	/^function! tlib#arg#StringAsKeyArgs(string, ...) "{{{1$/;"	f
tlib#autocmdgroup#Init	bundle/tlib_vim/autoload/tlib/autocmdgroup.vim	/^function! tlib#autocmdgroup#Init() "{{{3$/;"	f
tlib#balloon#Expr	bundle/tlib_vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Expr() "{{{3$/;"	f
tlib#balloon#Register	bundle/tlib_vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Register(expr) "{{{3$/;"	f
tlib#balloon#Remove	bundle/tlib_vim/autoload/tlib/balloon.vim	/^function! tlib#balloon#Remove(expr) "{{{3$/;"	f
tlib#buffer#BufDo	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#BufDo(exec) "{{{3$/;"	f
tlib#buffer#CurrentByte	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#CurrentByte() "{{{3$/;"	f
tlib#buffer#DeleteRange	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#DeleteRange(line1, line2) "{{{3$/;"	f
tlib#buffer#DisableMRU	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#DisableMRU() "{{{3$/;"	f
tlib#buffer#EnableMRU	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#EnableMRU() "{{{3$/;"	f
tlib#buffer#Eval	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#Eval(buffer, code) "{{{3$/;"	f
tlib#buffer#GetList	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#GetList(...)$/;"	f
tlib#buffer#HighlightLine	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#HighlightLine(...) "{{{3$/;"	f
tlib#buffer#InsertText	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText(text, ...) "{{{3$/;"	f
tlib#buffer#InsertText0	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#InsertText0(text, ...) "{{{3$/;"	f
tlib#buffer#KeepCursorPosition	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#KeepCursorPosition(cmd) "{{{3$/;"	f
tlib#buffer#ReplaceRange	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ReplaceRange(line1, line2, lines)$/;"	f
tlib#buffer#ScratchEnd	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchEnd() "{{{3$/;"	f
tlib#buffer#ScratchStart	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ScratchStart() "{{{3$/;"	f
tlib#buffer#Set	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#Set(buffer) "{{{3$/;"	f
tlib#buffer#ViewLine	bundle/tlib_vim/autoload/tlib/buffer.vim	/^function! tlib#buffer#ViewLine(line, ...) "{{{3$/;"	f
tlib#cache#Dir	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Dir(...) "{{{3$/;"	f
tlib#cache#Filename	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Filename(type, ...) "{{{3$/;"	f
tlib#cache#Get	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Get(cfile) "{{{3$/;"	f
tlib#cache#ListFilesInCache	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#ListFilesInCache(...) "{{{3$/;"	f
tlib#cache#MaybePurge	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#MaybePurge() "{{{3$/;"	f
tlib#cache#Purge	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Purge() "{{{3$/;"	f
tlib#cache#Save	bundle/tlib_vim/autoload/tlib/cache.vim	/^function! tlib#cache#Save(cfile, dictionary) "{{{3$/;"	f
tlib#char#Get	bundle/tlib_vim/autoload/tlib/char.vim	/^function! tlib#char#Get(...) "{{{3$/;"	f
tlib#char#GetWithTimeout	bundle/tlib_vim/autoload/tlib/char.vim	/^function! tlib#char#GetWithTimeout(timeout, ...) "{{{3$/;"	f
tlib#char#IsAvailable	bundle/tlib_vim/autoload/tlib/char.vim	/^function! tlib#char#IsAvailable() "{{{3$/;"	f
tlib#cmd#BrowseOutput	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#BrowseOutput(command) "{{{3$/;"	f
tlib#cmd#BrowseOutputWithCallback	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#BrowseOutputWithCallback(callback, command) "{{{3$/;"	f
tlib#cmd#DefaultBrowseOutput	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#DefaultBrowseOutput(cmd) "{{{3$/;"	f
tlib#cmd#OutputAsList	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#OutputAsList(command) "{{{3$/;"	f
tlib#cmd#ParseScriptname	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#ParseScriptname(line) "{{{3$/;"	f
tlib#cmd#Time	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#Time(cmd) "{{{3$/;"	f
tlib#cmd#UseVertical	bundle/tlib_vim/autoload/tlib/cmd.vim	/^function! tlib#cmd#UseVertical(...) "{{{3$/;"	f
tlib#comments#Comments	bundle/tlib_vim/autoload/tlib/comments.vim	/^function! tlib#comments#Comments(...)$/;"	f
tlib#date#DiffInDays	bundle/tlib_vim/autoload/tlib/date.vim	/^function! tlib#date#DiffInDays(date, ...)$/;"	f
tlib#date#Parse	bundle/tlib_vim/autoload/tlib/date.vim	/^function! tlib#date#Parse(date, ...) "{{{3$/;"	f
tlib#date#SecondsSince1970	bundle/tlib_vim/autoload/tlib/date.vim	/^function! tlib#date#SecondsSince1970(date, ...) "{{{3$/;"	f
tlib#dir#CD	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#CD(dir, ...) "{{{3$/;"	f
tlib#dir#CanonicName	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#CanonicName(dirname) "{{{3$/;"	f
tlib#dir#Ensure	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#Ensure(dir) "{{{3$/;"	f
tlib#dir#MyRuntime	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#MyRuntime() "{{{3$/;"	f
tlib#dir#PlainName	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#PlainName(dirname) "{{{3$/;"	f
tlib#dir#Pop	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#Pop() "{{{3$/;"	f
tlib#dir#Push	bundle/tlib_vim/autoload/tlib/dir.vim	/^function! tlib#dir#Push(dir, ...) "{{{3$/;"	f
tlib#eval#FormatValue	bundle/tlib_vim/autoload/tlib/eval.vim	/^function! tlib#eval#FormatValue(value, ...) "{{{3$/;"	f
tlib#file#Join	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#Join(filename_parts, ...) "{{{3$/;"	f
tlib#file#Relative	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#Relative(filename, basedir) "{{{3$/;"	f
tlib#file#Split	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#Split(filename) "{{{3$/;"	f
tlib#file#With	bundle/tlib_vim/autoload/tlib/file.vim	/^function! tlib#file#With(fcmd, bcmd, files, ...) "{{{3$/;"	f
tlib#hook#Run	bundle/tlib_vim/autoload/tlib/hook.vim	/^function! tlib#hook#Run(hook, ...) "{{{3$/;"	f
tlib#input#CommandSelect	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#CommandSelect(command, ...) "{{{3$/;"	f
tlib#input#Dialog	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#Dialog(text, options, default) "{{{3$/;"	f
tlib#input#Edit	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#Edit(name, value, callback, ...) "{{{3$/;"	f
tlib#input#EditList	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#EditList(query, list, ...) "{{{3$/;"	f
tlib#input#List	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#List(type, ...) "{{{3$/;"	f
tlib#input#ListD	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#ListD(dict) "{{{3$/;"	f
tlib#input#ListW	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#ListW(world, ...) "{{{3$/;"	f
tlib#input#Resume	bundle/tlib_vim/autoload/tlib/input.vim	/^function! tlib#input#Resume(name, pick, bufnr) "{{{3$/;"	f
tlib#list#All	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#All(list, expr) "{{{3$/;"	f
tlib#list#Any	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Any(list, expr) "{{{3$/;"	f
tlib#list#Compact	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Compact(list) "{{{3$/;"	f
tlib#list#Find	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Find(list, filter, ...) "{{{3$/;"	f
tlib#list#FindAll	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#FindAll(list, filter, ...) "{{{3$/;"	f
tlib#list#Flatten	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Flatten(list) "{{{3$/;"	f
tlib#list#Inject	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Inject(list, value, Function) "{{{3$/;"	f
tlib#list#Remove	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Remove(list, element) "{{{3$/;"	f
tlib#list#RemoveAll	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#RemoveAll(list, element) "{{{3$/;"	f
tlib#list#Uniq	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Uniq(list, ...) "{{{3$/;"	f
tlib#list#Zip	bundle/tlib_vim/autoload/tlib/list.vim	/^function! tlib#list#Zip(lists, ...) "{{{3$/;"	f
tlib#map#PumAccept	bundle/tlib_vim/autoload/tlib/map.vim	/^function! tlib#map#PumAccept(key) "{{{3$/;"	f
tlib#normal#WithRegister	bundle/tlib_vim/autoload/tlib/normal.vim	/^function! tlib#normal#WithRegister(cmd, ...) "{{{3$/;"	f
tlib#notify#Echo	bundle/tlib_vim/autoload/tlib/notify.vim	/^function! tlib#notify#Echo(text, ...)$/;"	f
tlib#notify#TrimMessage	bundle/tlib_vim/autoload/tlib/notify.vim	/^function! tlib#notify#TrimMessage(message) "{{{3$/;"	f
tlib#paragraph#GetMetric	bundle/tlib_vim/autoload/tlib/paragraph.vim	/^function! tlib#paragraph#GetMetric() "{{{3$/;"	f
tlib#paragraph#Move	bundle/tlib_vim/autoload/tlib/paragraph.vim	/^function! tlib#paragraph#Move(direction, count)$/;"	f
tlib#progressbar#Display	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Display(value, ...) "{{{3$/;"	f
tlib#progressbar#Init	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Init(max, ...) "{{{3$/;"	f
tlib#progressbar#Restore	bundle/tlib_vim/autoload/tlib/progressbar.vim	/^function! tlib#progressbar#Restore() "{{{3$/;"	f
tlib#rx#Escape	bundle/tlib_vim/autoload/tlib/rx.vim	/^function! tlib#rx#Escape(text, ...) "{{{3$/;"	f
tlib#rx#EscapeReplace	bundle/tlib_vim/autoload/tlib/rx.vim	/^function! tlib#rx#EscapeReplace(text, ...) "{{{3$/;"	f
tlib#rx#Suffixes	bundle/tlib_vim/autoload/tlib/rx.vim	/^function! tlib#rx#Suffixes(...) "{{{3$/;"	f
tlib#scratch#CloseScratch	bundle/tlib_vim/autoload/tlib/scratch.vim	/^function! tlib#scratch#CloseScratch(keyargs, ...) "{{{3$/;"	f
tlib#scratch#UseScratch	bundle/tlib_vim/autoload/tlib/scratch.vim	/^function! tlib#scratch#UseScratch(...) "{{{3$/;"	f
tlib#signs#ClearAll	bundle/tlib_vim/autoload/tlib/signs.vim	/^function! tlib#signs#ClearAll(sign) "{{{3$/;"	f
tlib#signs#ClearBuffer	bundle/tlib_vim/autoload/tlib/signs.vim	/^function! tlib#signs#ClearBuffer(sign, bufnr) "{{{3$/;"	f
tlib#signs#Mark	bundle/tlib_vim/autoload/tlib/signs.vim	/^function! tlib#signs#Mark(sign, list) "{{{3$/;"	f
tlib#string#Chomp	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Chomp(string) "{{{3$/;"	f
tlib#string#Count	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Count(string, rx) "{{{3$/;"	f
tlib#string#Format	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Format(template, dict) "{{{3$/;"	f
tlib#string#Printf1	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Printf1(format, string) "{{{3$/;"	f
tlib#string#RemoveBackslashes	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#RemoveBackslashes(text, ...) "{{{3$/;"	f
tlib#string#Strip	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#Strip(string) "{{{3$/;"	f
tlib#string#TrimLeft	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#TrimLeft(string) "{{{3$/;"	f
tlib#string#TrimRight	bundle/tlib_vim/autoload/tlib/string.vim	/^function! tlib#string#TrimRight(string) "{{{3$/;"	f
tlib#syntax#Collect	bundle/tlib_vim/autoload/tlib/syntax.vim	/^function! tlib#syntax#Collect() "{{{3$/;"	f
tlib#syntax#Names	bundle/tlib_vim/autoload/tlib/syntax.vim	/^function! tlib#syntax#Names(...) "{{{3$/;"	f
tlib#tab#BufMap	bundle/tlib_vim/autoload/tlib/tab.vim	/^function! tlib#tab#BufMap() "{{{3$/;"	f
tlib#tab#Set	bundle/tlib_vim/autoload/tlib/tab.vim	/^function! tlib#tab#Set(tabnr) "{{{3$/;"	f
tlib#tab#TabWinNr	bundle/tlib_vim/autoload/tlib/tab.vim	/^function! tlib#tab#TabWinNr(buffer) "{{{3$/;"	f
tlib#tag#Collect	bundle/tlib_vim/autoload/tlib/tag.vim	/^function! tlib#tag#Collect(constraints, ...) "{{{3$/;"	f
tlib#tag#Format	bundle/tlib_vim/autoload/tlib/tag.vim	/^function! tlib#tag#Format(tag) "{{{3$/;"	f
tlib#tag#Retrieve	bundle/tlib_vim/autoload/tlib/tag.vim	/^function! tlib#tag#Retrieve(rx, ...) "{{{3$/;"	f
tlib#textobjects#Init	bundle/tlib_vim/autoload/tlib/textobjects.vim	/^function! tlib#textobjects#Init() "{{{3$/;"	f
tlib#textobjects#StandardParagraph	bundle/tlib_vim/autoload/tlib/textobjects.vim	/^function! tlib#textobjects#StandardParagraph() "{{{3$/;"	f
tlib#time#Diff	bundle/tlib_vim/autoload/tlib/time.vim	/^function! tlib#time#Diff(a, b, ...) "{{{3$/;"	f
tlib#time#DiffMSecs	bundle/tlib_vim/autoload/tlib/time.vim	/^function! tlib#time#DiffMSecs(a, b, ...) "{{{3$/;"	f
tlib#time#MSecs	bundle/tlib_vim/autoload/tlib/time.vim	/^function! tlib#time#MSecs() "{{{3$/;"	f
tlib#time#Now	bundle/tlib_vim/autoload/tlib/time.vim	/^function! tlib#time#Now() "{{{3$/;"	f
tlib#type#IsDictionary	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsDictionary(expr)$/;"	f
tlib#type#IsFuncref	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsFuncref(expr)$/;"	f
tlib#type#IsList	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsList(expr)$/;"	f
tlib#type#IsNumber	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsNumber(expr)$/;"	f
tlib#type#IsString	bundle/tlib_vim/autoload/tlib/type.vim	/^function! tlib#type#IsString(expr)$/;"	f
tlib#url#Decode	bundle/tlib_vim/autoload/tlib/url.vim	/^function! tlib#url#Decode(url) "{{{3$/;"	f
tlib#url#DecodeChar	bundle/tlib_vim/autoload/tlib/url.vim	/^function! tlib#url#DecodeChar(char) "{{{3$/;"	f
tlib#url#Encode	bundle/tlib_vim/autoload/tlib/url.vim	/^function! tlib#url#Encode(url, ...) "{{{3$/;"	f
tlib#url#EncodeChar	bundle/tlib_vim/autoload/tlib/url.vim	/^function! tlib#url#EncodeChar(char) "{{{3$/;"	f
tlib#var#EGet	bundle/tlib_vim/autoload/tlib/var.vim	/^function! tlib#var#EGet(var, namespace, ...) "{{{3$/;"	f
tlib#var#Get	bundle/tlib_vim/autoload/tlib/var.vim	/^function! tlib#var#Get(var, namespace, ...) "{{{3$/;"	f
tlib#var#Let	bundle/tlib_vim/autoload/tlib/var.vim	/^function! tlib#var#Let(name, val) "{{{3$/;"	f
tlib#var#List	bundle/tlib_vim/autoload/tlib/var.vim	/^function! tlib#var#List(rx, ...) "{{{3$/;"	f
tlib#vcs#Diff	bundle/tlib_vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#Diff(filename, ...) "{{{3$/;"	f
tlib#vcs#FindVCS	bundle/tlib_vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#FindVCS(filename) "{{{3$/;"	f
tlib#vcs#Ls	bundle/tlib_vim/autoload/tlib/vcs.vim	/^function! tlib#vcs#Ls(...) "{{{3$/;"	f
tlib#vim#Maximize	bundle/tlib_vim/autoload/tlib/vim.vim	/^    fun! tlib#vim#Maximize(fullscreen) "{{{3$/;"	f
tlib#vim#RestoreWindow	bundle/tlib_vim/autoload/tlib/vim.vim	/^    function! tlib#vim#RestoreWindow() "{{{3$/;"	f
tlib#win#GetLayout	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#GetLayout(...) "{{{3$/;"	f
tlib#win#List	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#List() "{{{3$/;"	f
tlib#win#Set	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#Set(winnr) "{{{3$/;"	f
tlib#win#SetLayout	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#SetLayout(layout) "{{{3$/;"	f
tlib#win#Width	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#Width(wnr) "{{{3$/;"	f
tlib#win#WinDo	bundle/tlib_vim/autoload/tlib/win.vim	/^function! tlib#win#WinDo(ex) "{{{3$/;"	f
tmp	ftplugin/perl/omniperl.vim	/^let tmp                = tempname()$/;"	v
traceTree	ftplugin/python/pyflakes/pyflakes/checker.py	/^    traceTree = False$/;"	v	class:Checker
types	vimfiles/ftplugin/pydiction/pydiction.py	/^import types$/;"	i
u	ftplugin/python/pyflakes.vim	/^noremap <buffer><silent> u u:PyflakesUpdate<CR>$/;"	m
unescape	autoload/xolox/misc/option.vim	/^function! s:unescape(s)$/;"	f
unescape_tags	autoload/xolox/misc/option.vim	/^function! s:unescape_tags(s)$/;"	f
unittest	ftplugin/python/pyflakes/pyflakes/test/harness.py	/^from twisted.trial import unittest$/;"	i
url	ftplugin/python/pyflakes/setup.py	/^    url="http:\/\/www.divmod.org\/trac\/wiki\/DivmodPyflakes",$/;"	v
variable	ftplugin/python/pyflakes/pyflakes/messages.py	/^    message = 'import %r from line %r shadowed by loop variable'$/;"	i
version	ftplugin/python/pyflakes/setup.py	/^    version="0.4.0",$/;"	v
version_info	ftplugin/python/pyflakes/pyflakes/test/test_imports.py	/^from sys import version_info$/;"	i
version_info	ftplugin/python/pyflakes/pyflakes/test/test_other.py	/^from sys import version_info$/;"	i
vim	ftplugin/python/pyflakes.vim	/^import vim$/;"	m
vim_print	ftplugin/perl/omniperl.pl	/^sub vim_print$/;"	s
vimball#Decompress	autoload/vimball.vim	/^fun! vimball#Decompress(fname,...)$/;"	f
vimball#MkVimball	autoload/vimball.vim	/^fun! vimball#MkVimball(line1,line2,writelevel,...) range$/;"	f
vimball#RestoreSettings	autoload/vimball.vim	/^fun! vimball#RestoreSettings()$/;"	f
vimball#RmVimball	autoload/vimball.vim	/^fun! vimball#RmVimball(...)$/;"	f
vimball#SaveSettings	autoload/vimball.vim	/^fun! vimball#SaveSettings()$/;"	f
vimball#ShowMesg	autoload/vimball.vim	/^fun! vimball#ShowMesg(level,msg)$/;"	f
vimball#Vimball	autoload/vimball.vim	/^fun! vimball#Vimball(really,...)$/;"	f
vimball#VimballHome	autoload/vimball.vim	/^fun! vimball#VimballHome()$/;"	f
wildignore_save	autoload/tagbar.vim	/^    let wildignore_save = &wildignore$/;"	v
withStderrTo	ftplugin/python/pyflakes/pyflakes/test/test_script.py	/^def withStderrTo(stderr, f):$/;"	f
write_dictionary	vimfiles/ftplugin/pydiction/pydiction.py	/^def write_dictionary(module_name):$/;"	f
write_to	vimfiles/ftplugin/pydiction/pydiction.py	/^        write_to = open(PYDICTION_DICT, 'a')$/;"	v
write_to	vimfiles/ftplugin/pydiction/pydiction.py	/^        write_to = sys.stdout$/;"	v
xolox#easytags#alias_filetypes	autoload/xolox/easytags.vim	/^function! xolox#easytags#alias_filetypes(...) " {{{2$/;"	f
xolox#easytags#autoload	autoload/xolox/easytags.vim	/^function! xolox#easytags#autoload(event) " {{{2$/;"	f
xolox#easytags#by_filetype	autoload/xolox/easytags.vim	/^function! xolox#easytags#by_filetype(undo) " {{{2$/;"	f
xolox#easytags#define_tagkind	autoload/xolox/easytags.vim	/^function! xolox#easytags#define_tagkind(object) " {{{2$/;"	f
xolox#easytags#file_has_tags	autoload/xolox/easytags.vim	/^function! xolox#easytags#file_has_tags(filename) " {{{2$/;"	f
xolox#easytags#get_tagsfile	autoload/xolox/easytags.vim	/^function! xolox#easytags#get_tagsfile() " {{{2$/;"	f
xolox#easytags#highlight	autoload/xolox/easytags.vim	/^function! xolox#easytags#highlight() " {{{2$/;"	f
xolox#easytags#map_filetypes	autoload/xolox/easytags.vim	/^function! xolox#easytags#map_filetypes(vim_ft, ctags_ft) " {{{2$/;"	f
xolox#easytags#parse_entries	autoload/xolox/easytags.vim	/^function! xolox#easytags#parse_entries(lines) " {{{2$/;"	f
xolox#easytags#parse_entry	autoload/xolox/easytags.vim	/^function! xolox#easytags#parse_entry(line) " {{{2$/;"	f
xolox#easytags#read_tagsfile	autoload/xolox/easytags.vim	/^function! xolox#easytags#read_tagsfile(tagsfile) " {{{2$/;"	f
xolox#easytags#register	autoload/xolox/easytags.vim	/^function! xolox#easytags#register(global) " {{{2$/;"	f
xolox#easytags#supported_filetypes	autoload/xolox/easytags.vim	/^function! xolox#easytags#supported_filetypes() " {{{2$/;"	f
xolox#easytags#to_ctags_ft	autoload/xolox/easytags.vim	/^function! xolox#easytags#to_ctags_ft(vim_ft) " {{{2$/;"	f
xolox#easytags#to_vim_ft	autoload/xolox/easytags.vim	/^function! xolox#easytags#to_vim_ft(ctags_ft) " {{{2$/;"	f
xolox#easytags#update	autoload/xolox/easytags.vim	/^function! xolox#easytags#update(silent, filter_tags, filenames) " {{{2$/;"	f
xolox#easytags#write_tagsfile	autoload/xolox/easytags.vim	/^function! xolox#easytags#write_tagsfile(tagsfile, headers, entries) " {{{2$/;"	f
xolox#misc#buffer#is_empty	autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#is_empty()$/;"	f
xolox#misc#buffer#lock	autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#lock()$/;"	f
xolox#misc#buffer#prepare	autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#prepare(bufname)$/;"	f
xolox#misc#buffer#unlock	autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#unlock()$/;"	f
xolox#misc#complete#keywords	autoload/xolox/misc/complete.vim	/^function! xolox#misc#complete#keywords(arglead, cmdline, cursorpos)$/;"	f
xolox#misc#escape#pattern	autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#pattern(string)$/;"	f
xolox#misc#escape#shell	autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#shell(string)$/;"	f
xolox#misc#escape#substitute	autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#substitute(string)$/;"	f
xolox#misc#list#binsert	autoload/xolox/misc/list.vim	/^function! xolox#misc#list#binsert(list, value, ...)$/;"	f
xolox#misc#list#unique	autoload/xolox/misc/list.vim	/^function! xolox#misc#list#unique(list)$/;"	f
xolox#misc#msg#debug	autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#debug(...)$/;"	f
xolox#misc#msg#info	autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#info(...)$/;"	f
xolox#misc#msg#warn	autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#warn(...)$/;"	f
xolox#misc#open#file	autoload/xolox/misc/open.vim	/^function! xolox#misc#open#file(path, ...)$/;"	f
xolox#misc#open#url	autoload/xolox/misc/open.vim	/^function! xolox#misc#open#url(url)$/;"	f
xolox#misc#option#eval_tags	autoload/xolox/misc/option.vim	/^function! xolox#misc#option#eval_tags(value, ...)$/;"	f
xolox#misc#option#get	autoload/xolox/misc/option.vim	/^function! xolox#misc#option#get(name, ...)$/;"	f
xolox#misc#option#join	autoload/xolox/misc/option.vim	/^function! xolox#misc#option#join(values)$/;"	f
xolox#misc#option#join_tags	autoload/xolox/misc/option.vim	/^function! xolox#misc#option#join_tags(values)$/;"	f
xolox#misc#option#split	autoload/xolox/misc/option.vim	/^function! xolox#misc#option#split(value)$/;"	f
xolox#misc#option#split_tags	autoload/xolox/misc/option.vim	/^function! xolox#misc#option#split_tags(value)$/;"	f
xolox#misc#os#exec	autoload/xolox/misc/os.vim	/^function! xolox#misc#os#exec(cmdline, ...)$/;"	f
xolox#misc#os#is_win	autoload/xolox/misc/os.vim	/^function! xolox#misc#os#is_win()$/;"	f
xolox#misc#path#absolute	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#absolute(path)$/;"	f
xolox#misc#path#commonprefix	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#commonprefix(paths)$/;"	f
xolox#misc#path#decode	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#decode(encoded_path)$/;"	f
xolox#misc#path#encode	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#encode(path)$/;"	f
xolox#misc#path#equals	autoload/xolox/misc/path.vim	/^  function! xolox#misc#path#equals(a, b)$/;"	f
xolox#misc#path#is_relative	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#is_relative(path)$/;"	f
xolox#misc#path#join	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#join(parts)$/;"	f
xolox#misc#path#merge	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#merge(parent, child, ...)$/;"	f
xolox#misc#path#relative	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#relative(path, base)$/;"	f
xolox#misc#path#split	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#split(path)$/;"	f
xolox#misc#path#tempdir	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#tempdir()$/;"	f
xolox#misc#path#which	autoload/xolox/misc/path.vim	/^function! xolox#misc#path#which(...)$/;"	f
xolox#misc#str#trim	autoload/xolox/misc/str.vim	/^function! xolox#misc#str#trim(s)$/;"	f
xolox#misc#timer#format_timespan	autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#format_timespan(ts)$/;"	f
xolox#misc#timer#start	autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#start()$/;"	f
xolox#misc#timer#stop	autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#stop(...)$/;"	f
zh	vimrc/main.vim	/^nmap zh z<Cr>$/;"	m
zl	vimrc/main.vim	/^nmap zl zb$/;"	m
zm	vimrc/main.vim	/^nmap zm z.$/;"	m
